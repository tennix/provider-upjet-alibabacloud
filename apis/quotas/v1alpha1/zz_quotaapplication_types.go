// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DimensionsInitParameters struct {

	// The key of the dimension. You must configure dimensions.N.key and dimensions.N.value at the same time. The value range of N varies based on the number of dimensions that are supported by the related Alibaba Cloud service. You can call the ListProductQuotaDimensions operation to query the dimensions that are supported by an Alibaba Cloud service. The number of elements in the returned array is N.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The value of the dimension. You must configure dimensions.N.key and dimensions.N.value at the same time. The value range of N varies based on the number of dimensions that are supported by the related Alibaba Cloud service. You can call the ListProductQuotaDimensions operation to query the dimensions that are supported by an Alibaba Cloud service. The number of elements in the returned array is N.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type DimensionsObservation struct {

	// The key of the dimension. You must configure dimensions.N.key and dimensions.N.value at the same time. The value range of N varies based on the number of dimensions that are supported by the related Alibaba Cloud service. You can call the ListProductQuotaDimensions operation to query the dimensions that are supported by an Alibaba Cloud service. The number of elements in the returned array is N.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The value of the dimension. You must configure dimensions.N.key and dimensions.N.value at the same time. The value range of N varies based on the number of dimensions that are supported by the related Alibaba Cloud service. You can call the ListProductQuotaDimensions operation to query the dimensions that are supported by an Alibaba Cloud service. The number of elements in the returned array is N.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type DimensionsParameters struct {

	// The key of the dimension. You must configure dimensions.N.key and dimensions.N.value at the same time. The value range of N varies based on the number of dimensions that are supported by the related Alibaba Cloud service. You can call the ListProductQuotaDimensions operation to query the dimensions that are supported by an Alibaba Cloud service. The number of elements in the returned array is N.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The value of the dimension. You must configure dimensions.N.key and dimensions.N.value at the same time. The value range of N varies based on the number of dimensions that are supported by the related Alibaba Cloud service. You can call the ListProductQuotaDimensions operation to query the dimensions that are supported by an Alibaba Cloud service. The number of elements in the returned array is N.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type QuotaApplicationInitParameters struct {

	// This parameter is discontinued and is not recommended. The mode in which you want the application to be reviewed. Valid values:
	AuditMode *string `json:"auditMode,omitempty" tf:"audit_mode,omitempty"`

	// The desire value of the quota application.
	DesireValue *float64 `json:"desireValue,omitempty" tf:"desire_value,omitempty"`

	// QuotaDimensions. See dimensions below.
	Dimensions []DimensionsInitParameters `json:"dimensions,omitempty" tf:"dimensions,omitempty"`

	// The effective time of the quota application.
	EffectiveTime *string `json:"effectiveTime,omitempty" tf:"effective_time,omitempty"`

	// The language of the quota alert notification. Value:
	EnvLanguage *string `json:"envLanguage,omitempty" tf:"env_language,omitempty"`

	// The expired time of the quota application.
	ExpireTime *string `json:"expireTime,omitempty" tf:"expire_time,omitempty"`

	// Specifies whether to send a notification about the application result. Valid values:0: sends a notification about the application result.3: A notification about the application result is sent.
	NoticeType *float64 `json:"noticeType,omitempty" tf:"notice_type,omitempty"`

	// The product code.
	ProductCode *string `json:"productCode,omitempty" tf:"product_code,omitempty"`

	// The ID of quota action.
	QuotaActionCode *string `json:"quotaActionCode,omitempty" tf:"quota_action_code,omitempty"`

	// The quota type.
	QuotaCategory *string `json:"quotaCategory,omitempty" tf:"quota_category,omitempty"`

	// The reason of the quota application.
	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`
}

type QuotaApplicationObservation struct {

	// The approve value of the quota application.
	ApproveValue *string `json:"approveValue,omitempty" tf:"approve_value,omitempty"`

	// This parameter is discontinued and is not recommended. The mode in which you want the application to be reviewed. Valid values:
	AuditMode *string `json:"auditMode,omitempty" tf:"audit_mode,omitempty"`

	// The audit reason.
	AuditReason *string `json:"auditReason,omitempty" tf:"audit_reason,omitempty"`

	// Resource attribute field representing creation time.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// The desire value of the quota application.
	DesireValue *float64 `json:"desireValue,omitempty" tf:"desire_value,omitempty"`

	// QuotaDimensions. See dimensions below.
	Dimensions []DimensionsObservation `json:"dimensions,omitempty" tf:"dimensions,omitempty"`

	// The effective time of the quota application.
	EffectiveTime *string `json:"effectiveTime,omitempty" tf:"effective_time,omitempty"`

	// The language of the quota alert notification. Value:
	EnvLanguage *string `json:"envLanguage,omitempty" tf:"env_language,omitempty"`

	// The expired time of the quota application.
	ExpireTime *string `json:"expireTime,omitempty" tf:"expire_time,omitempty"`

	// The ID of the resource supplied above.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies whether to send a notification about the application result. Valid values:0: sends a notification about the application result.3: A notification about the application result is sent.
	NoticeType *float64 `json:"noticeType,omitempty" tf:"notice_type,omitempty"`

	// The product code.
	ProductCode *string `json:"productCode,omitempty" tf:"product_code,omitempty"`

	// The ID of quota action.
	QuotaActionCode *string `json:"quotaActionCode,omitempty" tf:"quota_action_code,omitempty"`

	// The quota type.
	QuotaCategory *string `json:"quotaCategory,omitempty" tf:"quota_category,omitempty"`

	// The description of the quota application.
	QuotaDescription *string `json:"quotaDescription,omitempty" tf:"quota_description,omitempty"`

	// The name of the quota application.
	QuotaName *string `json:"quotaName,omitempty" tf:"quota_name,omitempty"`

	// The unit of the quota application.
	QuotaUnit *string `json:"quotaUnit,omitempty" tf:"quota_unit,omitempty"`

	// The reason of the quota application.
	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`

	// Application Status:
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type QuotaApplicationParameters struct {

	// This parameter is discontinued and is not recommended. The mode in which you want the application to be reviewed. Valid values:
	// +kubebuilder:validation:Optional
	AuditMode *string `json:"auditMode,omitempty" tf:"audit_mode,omitempty"`

	// The desire value of the quota application.
	// +kubebuilder:validation:Optional
	DesireValue *float64 `json:"desireValue,omitempty" tf:"desire_value,omitempty"`

	// QuotaDimensions. See dimensions below.
	// +kubebuilder:validation:Optional
	Dimensions []DimensionsParameters `json:"dimensions,omitempty" tf:"dimensions,omitempty"`

	// The effective time of the quota application.
	// +kubebuilder:validation:Optional
	EffectiveTime *string `json:"effectiveTime,omitempty" tf:"effective_time,omitempty"`

	// The language of the quota alert notification. Value:
	// +kubebuilder:validation:Optional
	EnvLanguage *string `json:"envLanguage,omitempty" tf:"env_language,omitempty"`

	// The expired time of the quota application.
	// +kubebuilder:validation:Optional
	ExpireTime *string `json:"expireTime,omitempty" tf:"expire_time,omitempty"`

	// Specifies whether to send a notification about the application result. Valid values:0: sends a notification about the application result.3: A notification about the application result is sent.
	// +kubebuilder:validation:Optional
	NoticeType *float64 `json:"noticeType,omitempty" tf:"notice_type,omitempty"`

	// The product code.
	// +kubebuilder:validation:Optional
	ProductCode *string `json:"productCode,omitempty" tf:"product_code,omitempty"`

	// The ID of quota action.
	// +kubebuilder:validation:Optional
	QuotaActionCode *string `json:"quotaActionCode,omitempty" tf:"quota_action_code,omitempty"`

	// The quota type.
	// +kubebuilder:validation:Optional
	QuotaCategory *string `json:"quotaCategory,omitempty" tf:"quota_category,omitempty"`

	// The reason of the quota application.
	// +kubebuilder:validation:Optional
	Reason *string `json:"reason,omitempty" tf:"reason,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`
}

// QuotaApplicationSpec defines the desired state of QuotaApplication
type QuotaApplicationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     QuotaApplicationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider QuotaApplicationInitParameters `json:"initProvider,omitempty"`
}

// QuotaApplicationStatus defines the observed state of QuotaApplication.
type QuotaApplicationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        QuotaApplicationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// QuotaApplication is the Schema for the QuotaApplications API. Provides a Alicloud Quotas Quota Application resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type QuotaApplication struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.desireValue) || (has(self.initProvider) && has(self.initProvider.desireValue))",message="spec.forProvider.desireValue is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.productCode) || (has(self.initProvider) && has(self.initProvider.productCode))",message="spec.forProvider.productCode is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.quotaActionCode) || (has(self.initProvider) && has(self.initProvider.quotaActionCode))",message="spec.forProvider.quotaActionCode is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.reason) || (has(self.initProvider) && has(self.initProvider.reason))",message="spec.forProvider.reason is a required parameter"
	Spec   QuotaApplicationSpec   `json:"spec"`
	Status QuotaApplicationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// QuotaApplicationList contains a list of QuotaApplications
type QuotaApplicationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []QuotaApplication `json:"items"`
}

// Repository type metadata.
var (
	QuotaApplication_Kind             = "QuotaApplication"
	QuotaApplication_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: QuotaApplication_Kind}.String()
	QuotaApplication_KindAPIVersion   = QuotaApplication_Kind + "." + CRDGroupVersion.String()
	QuotaApplication_GroupVersionKind = CRDGroupVersion.WithKind(QuotaApplication_Kind)
)

func init() {
	SchemeBuilder.Register(&QuotaApplication{}, &QuotaApplicationList{})
}
