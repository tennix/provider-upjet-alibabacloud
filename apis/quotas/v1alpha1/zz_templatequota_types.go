// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type TemplateQuotaDimensionsInitParameters struct {

	// The Key of quota_dimensions.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The Value of quota_dimensions.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TemplateQuotaDimensionsObservation struct {

	// The Key of quota_dimensions.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The Value of quota_dimensions.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TemplateQuotaDimensionsParameters struct {

	// The Key of quota_dimensions.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The Value of quota_dimensions.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TemplateQuotaInitParameters struct {

	// Quota application value.
	DesireValue *float64 `json:"desireValue,omitempty" tf:"desire_value,omitempty"`

	// The Quota Dimensions. See dimensions below.
	Dimensions []TemplateQuotaDimensionsInitParameters `json:"dimensions,omitempty" tf:"dimensions,omitempty"`

	// The UTC time when the quota takes effect.
	EffectiveTime *string `json:"effectiveTime,omitempty" tf:"effective_time,omitempty"`

	// The language of the quota alert notification. Value:
	EnvLanguage *string `json:"envLanguage,omitempty" tf:"env_language,omitempty"`

	// The UTC time when the quota expires.
	ExpireTime *string `json:"expireTime,omitempty" tf:"expire_time,omitempty"`

	// Whether to notify the result of quota promotion application. Value:
	NoticeType *float64 `json:"noticeType,omitempty" tf:"notice_type,omitempty"`

	// The abbreviation of the cloud service name.
	ProductCode *string `json:"productCode,omitempty" tf:"product_code,omitempty"`

	// The quota ID.
	QuotaActionCode *string `json:"quotaActionCode,omitempty" tf:"quota_action_code,omitempty"`

	// Type of quota. Value:
	QuotaCategory *string `json:"quotaCategory,omitempty" tf:"quota_category,omitempty"`
}

type TemplateQuotaObservation struct {

	// Quota application value.
	DesireValue *float64 `json:"desireValue,omitempty" tf:"desire_value,omitempty"`

	// The Quota Dimensions. See dimensions below.
	Dimensions []TemplateQuotaDimensionsObservation `json:"dimensions,omitempty" tf:"dimensions,omitempty"`

	// The UTC time when the quota takes effect.
	EffectiveTime *string `json:"effectiveTime,omitempty" tf:"effective_time,omitempty"`

	// The language of the quota alert notification. Value:
	EnvLanguage *string `json:"envLanguage,omitempty" tf:"env_language,omitempty"`

	// The UTC time when the quota expires.
	ExpireTime *string `json:"expireTime,omitempty" tf:"expire_time,omitempty"`

	// The ID of the resource supplied above.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Whether to notify the result of quota promotion application. Value:
	NoticeType *float64 `json:"noticeType,omitempty" tf:"notice_type,omitempty"`

	// The abbreviation of the cloud service name.
	ProductCode *string `json:"productCode,omitempty" tf:"product_code,omitempty"`

	// The quota ID.
	QuotaActionCode *string `json:"quotaActionCode,omitempty" tf:"quota_action_code,omitempty"`

	// Type of quota. Value:
	QuotaCategory *string `json:"quotaCategory,omitempty" tf:"quota_category,omitempty"`
}

type TemplateQuotaParameters struct {

	// Quota application value.
	// +kubebuilder:validation:Optional
	DesireValue *float64 `json:"desireValue,omitempty" tf:"desire_value,omitempty"`

	// The Quota Dimensions. See dimensions below.
	// +kubebuilder:validation:Optional
	Dimensions []TemplateQuotaDimensionsParameters `json:"dimensions,omitempty" tf:"dimensions,omitempty"`

	// The UTC time when the quota takes effect.
	// +kubebuilder:validation:Optional
	EffectiveTime *string `json:"effectiveTime,omitempty" tf:"effective_time,omitempty"`

	// The language of the quota alert notification. Value:
	// +kubebuilder:validation:Optional
	EnvLanguage *string `json:"envLanguage,omitempty" tf:"env_language,omitempty"`

	// The UTC time when the quota expires.
	// +kubebuilder:validation:Optional
	ExpireTime *string `json:"expireTime,omitempty" tf:"expire_time,omitempty"`

	// Whether to notify the result of quota promotion application. Value:
	// +kubebuilder:validation:Optional
	NoticeType *float64 `json:"noticeType,omitempty" tf:"notice_type,omitempty"`

	// The abbreviation of the cloud service name.
	// +kubebuilder:validation:Optional
	ProductCode *string `json:"productCode,omitempty" tf:"product_code,omitempty"`

	// The quota ID.
	// +kubebuilder:validation:Optional
	QuotaActionCode *string `json:"quotaActionCode,omitempty" tf:"quota_action_code,omitempty"`

	// Type of quota. Value:
	// +kubebuilder:validation:Optional
	QuotaCategory *string `json:"quotaCategory,omitempty" tf:"quota_category,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`
}

// TemplateQuotaSpec defines the desired state of TemplateQuota
type TemplateQuotaSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TemplateQuotaParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider TemplateQuotaInitParameters `json:"initProvider,omitempty"`
}

// TemplateQuotaStatus defines the observed state of TemplateQuota.
type TemplateQuotaStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TemplateQuotaObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// TemplateQuota is the Schema for the TemplateQuotas API. Provides a Alicloud Quotas Template Quota resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type TemplateQuota struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.desireValue) || (has(self.initProvider) && has(self.initProvider.desireValue))",message="spec.forProvider.desireValue is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.productCode) || (has(self.initProvider) && has(self.initProvider.productCode))",message="spec.forProvider.productCode is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.quotaActionCode) || (has(self.initProvider) && has(self.initProvider.quotaActionCode))",message="spec.forProvider.quotaActionCode is a required parameter"
	Spec   TemplateQuotaSpec   `json:"spec"`
	Status TemplateQuotaStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TemplateQuotaList contains a list of TemplateQuotas
type TemplateQuotaList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TemplateQuota `json:"items"`
}

// Repository type metadata.
var (
	TemplateQuota_Kind             = "TemplateQuota"
	TemplateQuota_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TemplateQuota_Kind}.String()
	TemplateQuota_KindAPIVersion   = TemplateQuota_Kind + "." + CRDGroupVersion.String()
	TemplateQuota_GroupVersionKind = CRDGroupVersion.WithKind(TemplateQuota_Kind)
)

func init() {
	SchemeBuilder.Register(&TemplateQuota{}, &TemplateQuotaList{})
}
