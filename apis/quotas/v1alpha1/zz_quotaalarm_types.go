// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type QuotaAlarmInitParameters struct {

	// The Product Code.
	ProductCode *string `json:"productCode,omitempty" tf:"product_code,omitempty"`

	// The Quota Action Code.
	QuotaActionCode *string `json:"quotaActionCode,omitempty" tf:"quota_action_code,omitempty"`

	// The name of Quota Alarm.
	QuotaAlarmName *string `json:"quotaAlarmName,omitempty" tf:"quota_alarm_name,omitempty"`

	// The Quota Dimensions. See quota_dimensions below.
	QuotaDimensions []QuotaDimensionsInitParameters `json:"quotaDimensions,omitempty" tf:"quota_dimensions,omitempty"`

	// The threshold of Quota Alarm.
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// The threshold percent of Quota Alarm.
	ThresholdPercent *float64 `json:"thresholdPercent,omitempty" tf:"threshold_percent,omitempty"`

	// Quota alarm type. Value:
	ThresholdType *string `json:"thresholdType,omitempty" tf:"threshold_type,omitempty"`

	// The WebHook of Quota Alarm.
	WebHook *string `json:"webHook,omitempty" tf:"web_hook,omitempty"`
}

type QuotaAlarmObservation struct {

	// The creation time of the resource.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// The ID of the resource supplied above.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The Product Code.
	ProductCode *string `json:"productCode,omitempty" tf:"product_code,omitempty"`

	// The Quota Action Code.
	QuotaActionCode *string `json:"quotaActionCode,omitempty" tf:"quota_action_code,omitempty"`

	// The name of Quota Alarm.
	QuotaAlarmName *string `json:"quotaAlarmName,omitempty" tf:"quota_alarm_name,omitempty"`

	// The Quota Dimensions. See quota_dimensions below.
	QuotaDimensions []QuotaDimensionsObservation `json:"quotaDimensions,omitempty" tf:"quota_dimensions,omitempty"`

	// The threshold of Quota Alarm.
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// The threshold percent of Quota Alarm.
	ThresholdPercent *float64 `json:"thresholdPercent,omitempty" tf:"threshold_percent,omitempty"`

	// Quota alarm type. Value:
	ThresholdType *string `json:"thresholdType,omitempty" tf:"threshold_type,omitempty"`

	// The WebHook of Quota Alarm.
	WebHook *string `json:"webHook,omitempty" tf:"web_hook,omitempty"`
}

type QuotaAlarmParameters struct {

	// The Product Code.
	// +kubebuilder:validation:Optional
	ProductCode *string `json:"productCode,omitempty" tf:"product_code,omitempty"`

	// The Quota Action Code.
	// +kubebuilder:validation:Optional
	QuotaActionCode *string `json:"quotaActionCode,omitempty" tf:"quota_action_code,omitempty"`

	// The name of Quota Alarm.
	// +kubebuilder:validation:Optional
	QuotaAlarmName *string `json:"quotaAlarmName,omitempty" tf:"quota_alarm_name,omitempty"`

	// The Quota Dimensions. See quota_dimensions below.
	// +kubebuilder:validation:Optional
	QuotaDimensions []QuotaDimensionsParameters `json:"quotaDimensions,omitempty" tf:"quota_dimensions,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// The threshold of Quota Alarm.
	// +kubebuilder:validation:Optional
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`

	// The threshold percent of Quota Alarm.
	// +kubebuilder:validation:Optional
	ThresholdPercent *float64 `json:"thresholdPercent,omitempty" tf:"threshold_percent,omitempty"`

	// Quota alarm type. Value:
	// +kubebuilder:validation:Optional
	ThresholdType *string `json:"thresholdType,omitempty" tf:"threshold_type,omitempty"`

	// The WebHook of Quota Alarm.
	// +kubebuilder:validation:Optional
	WebHook *string `json:"webHook,omitempty" tf:"web_hook,omitempty"`
}

type QuotaDimensionsInitParameters struct {

	// The Key of quota_dimensions.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The Value of quota_dimensions.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type QuotaDimensionsObservation struct {

	// The Key of quota_dimensions.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The Value of quota_dimensions.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type QuotaDimensionsParameters struct {

	// The Key of quota_dimensions.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The Value of quota_dimensions.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

// QuotaAlarmSpec defines the desired state of QuotaAlarm
type QuotaAlarmSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     QuotaAlarmParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider QuotaAlarmInitParameters `json:"initProvider,omitempty"`
}

// QuotaAlarmStatus defines the observed state of QuotaAlarm.
type QuotaAlarmStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        QuotaAlarmObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// QuotaAlarm is the Schema for the QuotaAlarms API. Provides a Alicloud Quotas Quota Alarm resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type QuotaAlarm struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.productCode) || (has(self.initProvider) && has(self.initProvider.productCode))",message="spec.forProvider.productCode is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.quotaActionCode) || (has(self.initProvider) && has(self.initProvider.quotaActionCode))",message="spec.forProvider.quotaActionCode is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.quotaAlarmName) || (has(self.initProvider) && has(self.initProvider.quotaAlarmName))",message="spec.forProvider.quotaAlarmName is a required parameter"
	Spec   QuotaAlarmSpec   `json:"spec"`
	Status QuotaAlarmStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// QuotaAlarmList contains a list of QuotaAlarms
type QuotaAlarmList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []QuotaAlarm `json:"items"`
}

// Repository type metadata.
var (
	QuotaAlarm_Kind             = "QuotaAlarm"
	QuotaAlarm_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: QuotaAlarm_Kind}.String()
	QuotaAlarm_KindAPIVersion   = QuotaAlarm_Kind + "." + CRDGroupVersion.String()
	QuotaAlarm_GroupVersionKind = CRDGroupVersion.WithKind(QuotaAlarm_Kind)
)

func init() {
	SchemeBuilder.Register(&QuotaAlarm{}, &QuotaAlarmList{})
}
