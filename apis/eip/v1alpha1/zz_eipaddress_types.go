// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type EIPAddressInitParameters struct {

	// The promotion code. This parameter is not required.
	ActivityID *string `json:"activityId,omitempty" tf:"activity_id,omitempty"`

	// The EIP name.
	AddressName *string `json:"addressName,omitempty" tf:"address_name,omitempty"`

	// The ID of the EIP instance.
	AllocationID *string `json:"allocationId,omitempty" tf:"allocation_id,omitempty"`

	// Specifies whether to enable automatic payment. Valid values:
	AutoPay *bool `json:"autoPay,omitempty" tf:"auto_pay,omitempty"`

	// The maximum bandwidth of the specified EIP. Unit: Mbit/s.
	Bandwidth *string `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// Specifies whether to enable deletion protection. Valid values:
	DeletionProtection *bool `json:"deletionProtection,omitempty" tf:"deletion_protection,omitempty"`

	// The description of the EIP.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The status of fine-grained monitoring. Valid values:
	HighDefinitionMonitorLogStatus *string `json:"highDefinitionMonitorLogStatus,omitempty" tf:"high_definition_monitor_log_status,omitempty"`

	// The IP address of the EIP. Supports a maximum of 50 EIPs.
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// The metering method of the EIP. Valid values:
	InternetChargeType *string `json:"internetChargeType,omitempty" tf:"internet_charge_type,omitempty"`

	// The line type. Valid values:
	Isp *string `json:"isp,omitempty" tf:"isp,omitempty"`

	// The name of the Simple Log Service (SLS) project.
	LogProject *string `json:"logProject,omitempty" tf:"log_project,omitempty"`

	// The name of the Logstore.
	LogStore *string `json:"logStore,omitempty" tf:"log_store,omitempty"`

	// The association mode. Valid values:
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// The network type. By default, this value is set to public, which specifies the public network type.
	Netmode *string `json:"netmode,omitempty" tf:"netmode,omitempty"`

	// is set to Subscription, this parameter is required. If payment_type is set to PayAsYouGo, this parameter is not required.
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// Duration of purchase. When the value of pricing_cycle is Month, the value range of period is 1 to 9. When the value of pricing_cycle is Year, the value range of period is 1 to 5. If the value of the payment_type parameter is Subscription, this parameter is required. If the value of the payment_type parameter is PayAsYouGo, this parameter is left blank.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// The billing cycle of the subscription EIP. Valid values:
	PricingCycle *string `json:"pricingCycle,omitempty" tf:"pricing_cycle,omitempty"`

	// The ID of the IP address pool. The EIP is allocated from the IP address pool. By default, the IP address pool feature is unavailable. To use the IP address pool, apply for the privilege in the Quota Center console. For more information, see the "Request a quota increase in the Quota Center console" section in Manage EIP quotas.
	PublicIPAddressPoolID *string `json:"publicIpAddressPoolId,omitempty" tf:"public_ip_address_pool_id,omitempty"`

	// The ID of the resource group to which you want to move the resource.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// Security protection level.
	SecurityProtectionTypes []*string `json:"securityProtectionTypes,omitempty" tf:"security_protection_types,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The zone of the EIP. When the service type of the IP address pool specified by PublicIpAddressPoolId is CloudBox, the default value is the zone of the IP address pool. For more information, see ListPublicIpAddressPools.
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type EIPAddressObservation struct {

	// The promotion code. This parameter is not required.
	ActivityID *string `json:"activityId,omitempty" tf:"activity_id,omitempty"`

	// The EIP name.
	AddressName *string `json:"addressName,omitempty" tf:"address_name,omitempty"`

	// The ID of the EIP instance.
	AllocationID *string `json:"allocationId,omitempty" tf:"allocation_id,omitempty"`

	// Specifies whether to enable automatic payment. Valid values:
	AutoPay *bool `json:"autoPay,omitempty" tf:"auto_pay,omitempty"`

	// The maximum bandwidth of the specified EIP. Unit: Mbit/s.
	Bandwidth *string `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// The time when the EIP was created.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// Specifies whether to enable deletion protection. Valid values:
	DeletionProtection *bool `json:"deletionProtection,omitempty" tf:"deletion_protection,omitempty"`

	// The description of the EIP.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The status of fine-grained monitoring. Valid values:
	HighDefinitionMonitorLogStatus *string `json:"highDefinitionMonitorLogStatus,omitempty" tf:"high_definition_monitor_log_status,omitempty"`

	// The ID of the resource supplied above.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The IP address of the EIP. Supports a maximum of 50 EIPs.
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// The metering method of the EIP. Valid values:
	InternetChargeType *string `json:"internetChargeType,omitempty" tf:"internet_charge_type,omitempty"`

	// The line type. Valid values:
	Isp *string `json:"isp,omitempty" tf:"isp,omitempty"`

	// The name of the Simple Log Service (SLS) project.
	LogProject *string `json:"logProject,omitempty" tf:"log_project,omitempty"`

	// The name of the Logstore.
	LogStore *string `json:"logStore,omitempty" tf:"log_store,omitempty"`

	// The association mode. Valid values:
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// The network type. By default, this value is set to public, which specifies the public network type.
	Netmode *string `json:"netmode,omitempty" tf:"netmode,omitempty"`

	// is set to Subscription, this parameter is required. If payment_type is set to PayAsYouGo, this parameter is not required.
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// Duration of purchase. When the value of pricing_cycle is Month, the value range of period is 1 to 9. When the value of pricing_cycle is Year, the value range of period is 1 to 5. If the value of the payment_type parameter is Subscription, this parameter is required. If the value of the payment_type parameter is PayAsYouGo, this parameter is left blank.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// The billing cycle of the subscription EIP. Valid values:
	PricingCycle *string `json:"pricingCycle,omitempty" tf:"pricing_cycle,omitempty"`

	// The ID of the IP address pool. The EIP is allocated from the IP address pool. By default, the IP address pool feature is unavailable. To use the IP address pool, apply for the privilege in the Quota Center console. For more information, see the "Request a quota increase in the Quota Center console" section in Manage EIP quotas.
	PublicIPAddressPoolID *string `json:"publicIpAddressPoolId,omitempty" tf:"public_ip_address_pool_id,omitempty"`

	// The ID of the resource group to which you want to move the resource.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// Security protection level.
	SecurityProtectionTypes []*string `json:"securityProtectionTypes,omitempty" tf:"security_protection_types,omitempty"`

	// The state of the EIP.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The zone of the EIP. When the service type of the IP address pool specified by PublicIpAddressPoolId is CloudBox, the default value is the zone of the IP address pool. For more information, see ListPublicIpAddressPools.
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type EIPAddressParameters struct {

	// The promotion code. This parameter is not required.
	// +kubebuilder:validation:Optional
	ActivityID *string `json:"activityId,omitempty" tf:"activity_id,omitempty"`

	// The EIP name.
	// +kubebuilder:validation:Optional
	AddressName *string `json:"addressName,omitempty" tf:"address_name,omitempty"`

	// The ID of the EIP instance.
	// +kubebuilder:validation:Optional
	AllocationID *string `json:"allocationId,omitempty" tf:"allocation_id,omitempty"`

	// Specifies whether to enable automatic payment. Valid values:
	// +kubebuilder:validation:Optional
	AutoPay *bool `json:"autoPay,omitempty" tf:"auto_pay,omitempty"`

	// The maximum bandwidth of the specified EIP. Unit: Mbit/s.
	// +kubebuilder:validation:Optional
	Bandwidth *string `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// Specifies whether to enable deletion protection. Valid values:
	// +kubebuilder:validation:Optional
	DeletionProtection *bool `json:"deletionProtection,omitempty" tf:"deletion_protection,omitempty"`

	// The description of the EIP.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The status of fine-grained monitoring. Valid values:
	// +kubebuilder:validation:Optional
	HighDefinitionMonitorLogStatus *string `json:"highDefinitionMonitorLogStatus,omitempty" tf:"high_definition_monitor_log_status,omitempty"`

	// The IP address of the EIP. Supports a maximum of 50 EIPs.
	// +kubebuilder:validation:Optional
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// The metering method of the EIP. Valid values:
	// +kubebuilder:validation:Optional
	InternetChargeType *string `json:"internetChargeType,omitempty" tf:"internet_charge_type,omitempty"`

	// The line type. Valid values:
	// +kubebuilder:validation:Optional
	Isp *string `json:"isp,omitempty" tf:"isp,omitempty"`

	// The name of the Simple Log Service (SLS) project.
	// +kubebuilder:validation:Optional
	LogProject *string `json:"logProject,omitempty" tf:"log_project,omitempty"`

	// The name of the Logstore.
	// +kubebuilder:validation:Optional
	LogStore *string `json:"logStore,omitempty" tf:"log_store,omitempty"`

	// The association mode. Valid values:
	// +kubebuilder:validation:Optional
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// The network type. By default, this value is set to public, which specifies the public network type.
	// +kubebuilder:validation:Optional
	Netmode *string `json:"netmode,omitempty" tf:"netmode,omitempty"`

	// is set to Subscription, this parameter is required. If payment_type is set to PayAsYouGo, this parameter is not required.
	// +kubebuilder:validation:Optional
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// Duration of purchase. When the value of pricing_cycle is Month, the value range of period is 1 to 9. When the value of pricing_cycle is Year, the value range of period is 1 to 5. If the value of the payment_type parameter is Subscription, this parameter is required. If the value of the payment_type parameter is PayAsYouGo, this parameter is left blank.
	// +kubebuilder:validation:Optional
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// The billing cycle of the subscription EIP. Valid values:
	// +kubebuilder:validation:Optional
	PricingCycle *string `json:"pricingCycle,omitempty" tf:"pricing_cycle,omitempty"`

	// The ID of the IP address pool. The EIP is allocated from the IP address pool. By default, the IP address pool feature is unavailable. To use the IP address pool, apply for the privilege in the Quota Center console. For more information, see the "Request a quota increase in the Quota Center console" section in Manage EIP quotas.
	// +kubebuilder:validation:Optional
	PublicIPAddressPoolID *string `json:"publicIpAddressPoolId,omitempty" tf:"public_ip_address_pool_id,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// The ID of the resource group to which you want to move the resource.
	// +kubebuilder:validation:Optional
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// Security protection level.
	// +kubebuilder:validation:Optional
	SecurityProtectionTypes []*string `json:"securityProtectionTypes,omitempty" tf:"security_protection_types,omitempty"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The zone of the EIP. When the service type of the IP address pool specified by PublicIpAddressPoolId is CloudBox, the default value is the zone of the IP address pool. For more information, see ListPublicIpAddressPools.
	// +kubebuilder:validation:Optional
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

// EIPAddressSpec defines the desired state of EIPAddress
type EIPAddressSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     EIPAddressParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider EIPAddressInitParameters `json:"initProvider,omitempty"`
}

// EIPAddressStatus defines the observed state of EIPAddress.
type EIPAddressStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EIPAddressObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// EIPAddress is the Schema for the EIPAddresss API. Provides a Alicloud EIP Address resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type EIPAddress struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              EIPAddressSpec   `json:"spec"`
	Status            EIPAddressStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EIPAddressList contains a list of EIPAddresss
type EIPAddressList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []EIPAddress `json:"items"`
}

// Repository type metadata.
var (
	EIPAddress_Kind             = "EIPAddress"
	EIPAddress_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: EIPAddress_Kind}.String()
	EIPAddress_KindAPIVersion   = EIPAddress_Kind + "." + CRDGroupVersion.String()
	EIPAddress_GroupVersionKind = CRDGroupVersion.WithKind(EIPAddress_Kind)
)

func init() {
	SchemeBuilder.Register(&EIPAddress{}, &EIPAddressList{})
}
