//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Entry) DeepCopyInto(out *Entry) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Entry.
func (in *Entry) DeepCopy() *Entry {
	if in == nil {
		return nil
	}
	out := new(Entry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Entry) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntryInitParameters) DeepCopyInto(out *EntryInitParameters) {
	*out = *in
	if in.EIPAffinity != nil {
		in, out := &in.EIPAffinity, &out.EIPAffinity
		*out = new(float64)
		**out = **in
	}
	if in.SnatEntryName != nil {
		in, out := &in.SnatEntryName, &out.SnatEntryName
		*out = new(string)
		**out = **in
	}
	if in.SnatIP != nil {
		in, out := &in.SnatIP, &out.SnatIP
		*out = new(string)
		**out = **in
	}
	if in.SnatIPRef != nil {
		in, out := &in.SnatIPRef, &out.SnatIPRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SnatIPSelector != nil {
		in, out := &in.SnatIPSelector, &out.SnatIPSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SnatTableID != nil {
		in, out := &in.SnatTableID, &out.SnatTableID
		*out = new(string)
		**out = **in
	}
	if in.SnatTableIDRef != nil {
		in, out := &in.SnatTableIDRef, &out.SnatTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SnatTableIDSelector != nil {
		in, out := &in.SnatTableIDSelector, &out.SnatTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceCidr != nil {
		in, out := &in.SourceCidr, &out.SourceCidr
		*out = new(string)
		**out = **in
	}
	if in.SourceVswitchID != nil {
		in, out := &in.SourceVswitchID, &out.SourceVswitchID
		*out = new(string)
		**out = **in
	}
	if in.SourceVswitchIDRef != nil {
		in, out := &in.SourceVswitchIDRef, &out.SourceVswitchIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceVswitchIDSelector != nil {
		in, out := &in.SourceVswitchIDSelector, &out.SourceVswitchIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntryInitParameters.
func (in *EntryInitParameters) DeepCopy() *EntryInitParameters {
	if in == nil {
		return nil
	}
	out := new(EntryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntryList) DeepCopyInto(out *EntryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Entry, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntryList.
func (in *EntryList) DeepCopy() *EntryList {
	if in == nil {
		return nil
	}
	out := new(EntryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EntryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntryObservation) DeepCopyInto(out *EntryObservation) {
	*out = *in
	if in.EIPAffinity != nil {
		in, out := &in.EIPAffinity, &out.EIPAffinity
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SnatEntryID != nil {
		in, out := &in.SnatEntryID, &out.SnatEntryID
		*out = new(string)
		**out = **in
	}
	if in.SnatEntryName != nil {
		in, out := &in.SnatEntryName, &out.SnatEntryName
		*out = new(string)
		**out = **in
	}
	if in.SnatIP != nil {
		in, out := &in.SnatIP, &out.SnatIP
		*out = new(string)
		**out = **in
	}
	if in.SnatTableID != nil {
		in, out := &in.SnatTableID, &out.SnatTableID
		*out = new(string)
		**out = **in
	}
	if in.SourceCidr != nil {
		in, out := &in.SourceCidr, &out.SourceCidr
		*out = new(string)
		**out = **in
	}
	if in.SourceVswitchID != nil {
		in, out := &in.SourceVswitchID, &out.SourceVswitchID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntryObservation.
func (in *EntryObservation) DeepCopy() *EntryObservation {
	if in == nil {
		return nil
	}
	out := new(EntryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntryParameters) DeepCopyInto(out *EntryParameters) {
	*out = *in
	if in.EIPAffinity != nil {
		in, out := &in.EIPAffinity, &out.EIPAffinity
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SnatEntryName != nil {
		in, out := &in.SnatEntryName, &out.SnatEntryName
		*out = new(string)
		**out = **in
	}
	if in.SnatIP != nil {
		in, out := &in.SnatIP, &out.SnatIP
		*out = new(string)
		**out = **in
	}
	if in.SnatIPRef != nil {
		in, out := &in.SnatIPRef, &out.SnatIPRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SnatIPSelector != nil {
		in, out := &in.SnatIPSelector, &out.SnatIPSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SnatTableID != nil {
		in, out := &in.SnatTableID, &out.SnatTableID
		*out = new(string)
		**out = **in
	}
	if in.SnatTableIDRef != nil {
		in, out := &in.SnatTableIDRef, &out.SnatTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SnatTableIDSelector != nil {
		in, out := &in.SnatTableIDSelector, &out.SnatTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceCidr != nil {
		in, out := &in.SourceCidr, &out.SourceCidr
		*out = new(string)
		**out = **in
	}
	if in.SourceVswitchID != nil {
		in, out := &in.SourceVswitchID, &out.SourceVswitchID
		*out = new(string)
		**out = **in
	}
	if in.SourceVswitchIDRef != nil {
		in, out := &in.SourceVswitchIDRef, &out.SourceVswitchIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceVswitchIDSelector != nil {
		in, out := &in.SourceVswitchIDSelector, &out.SourceVswitchIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntryParameters.
func (in *EntryParameters) DeepCopy() *EntryParameters {
	if in == nil {
		return nil
	}
	out := new(EntryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntrySpec) DeepCopyInto(out *EntrySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntrySpec.
func (in *EntrySpec) DeepCopy() *EntrySpec {
	if in == nil {
		return nil
	}
	out := new(EntrySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntryStatus) DeepCopyInto(out *EntryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntryStatus.
func (in *EntryStatus) DeepCopy() *EntryStatus {
	if in == nil {
		return nil
	}
	out := new(EntryStatus)
	in.DeepCopyInto(out)
	return out
}
