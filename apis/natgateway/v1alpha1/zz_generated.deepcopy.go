//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessModeInitParameters) DeepCopyInto(out *AccessModeInitParameters) {
	*out = *in
	if in.ModeValue != nil {
		in, out := &in.ModeValue, &out.ModeValue
		*out = new(string)
		**out = **in
	}
	if in.TunnelType != nil {
		in, out := &in.TunnelType, &out.TunnelType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessModeInitParameters.
func (in *AccessModeInitParameters) DeepCopy() *AccessModeInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccessModeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessModeObservation) DeepCopyInto(out *AccessModeObservation) {
	*out = *in
	if in.ModeValue != nil {
		in, out := &in.ModeValue, &out.ModeValue
		*out = new(string)
		**out = **in
	}
	if in.TunnelType != nil {
		in, out := &in.TunnelType, &out.TunnelType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessModeObservation.
func (in *AccessModeObservation) DeepCopy() *AccessModeObservation {
	if in == nil {
		return nil
	}
	out := new(AccessModeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessModeParameters) DeepCopyInto(out *AccessModeParameters) {
	*out = *in
	if in.ModeValue != nil {
		in, out := &in.ModeValue, &out.ModeValue
		*out = new(string)
		**out = **in
	}
	if in.TunnelType != nil {
		in, out := &in.TunnelType, &out.TunnelType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessModeParameters.
func (in *AccessModeParameters) DeepCopy() *AccessModeParameters {
	if in == nil {
		return nil
	}
	out := new(AccessModeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BandwidthPackagesInitParameters) DeepCopyInto(out *BandwidthPackagesInitParameters) {
	*out = *in
	if in.Bandwidth != nil {
		in, out := &in.Bandwidth, &out.Bandwidth
		*out = new(float64)
		**out = **in
	}
	if in.IPCount != nil {
		in, out := &in.IPCount, &out.IPCount
		*out = new(float64)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BandwidthPackagesInitParameters.
func (in *BandwidthPackagesInitParameters) DeepCopy() *BandwidthPackagesInitParameters {
	if in == nil {
		return nil
	}
	out := new(BandwidthPackagesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BandwidthPackagesObservation) DeepCopyInto(out *BandwidthPackagesObservation) {
	*out = *in
	if in.Bandwidth != nil {
		in, out := &in.Bandwidth, &out.Bandwidth
		*out = new(float64)
		**out = **in
	}
	if in.IPCount != nil {
		in, out := &in.IPCount, &out.IPCount
		*out = new(float64)
		**out = **in
	}
	if in.PublicIPAddresses != nil {
		in, out := &in.PublicIPAddresses, &out.PublicIPAddresses
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BandwidthPackagesObservation.
func (in *BandwidthPackagesObservation) DeepCopy() *BandwidthPackagesObservation {
	if in == nil {
		return nil
	}
	out := new(BandwidthPackagesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BandwidthPackagesParameters) DeepCopyInto(out *BandwidthPackagesParameters) {
	*out = *in
	if in.Bandwidth != nil {
		in, out := &in.Bandwidth, &out.Bandwidth
		*out = new(float64)
		**out = **in
	}
	if in.IPCount != nil {
		in, out := &in.IPCount, &out.IPCount
		*out = new(float64)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BandwidthPackagesParameters.
func (in *BandwidthPackagesParameters) DeepCopy() *BandwidthPackagesParameters {
	if in == nil {
		return nil
	}
	out := new(BandwidthPackagesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardEntry) DeepCopyInto(out *ForwardEntry) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardEntry.
func (in *ForwardEntry) DeepCopy() *ForwardEntry {
	if in == nil {
		return nil
	}
	out := new(ForwardEntry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ForwardEntry) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardEntryInitParameters) DeepCopyInto(out *ForwardEntryInitParameters) {
	*out = *in
	if in.ExternalIP != nil {
		in, out := &in.ExternalIP, &out.ExternalIP
		*out = new(string)
		**out = **in
	}
	if in.ExternalIPRef != nil {
		in, out := &in.ExternalIPRef, &out.ExternalIPRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ExternalIPSelector != nil {
		in, out := &in.ExternalIPSelector, &out.ExternalIPSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ExternalPort != nil {
		in, out := &in.ExternalPort, &out.ExternalPort
		*out = new(string)
		**out = **in
	}
	if in.ForwardEntryName != nil {
		in, out := &in.ForwardEntryName, &out.ForwardEntryName
		*out = new(string)
		**out = **in
	}
	if in.ForwardTableID != nil {
		in, out := &in.ForwardTableID, &out.ForwardTableID
		*out = new(string)
		**out = **in
	}
	if in.ForwardTableIDRef != nil {
		in, out := &in.ForwardTableIDRef, &out.ForwardTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ForwardTableIDSelector != nil {
		in, out := &in.ForwardTableIDSelector, &out.ForwardTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.InternalIP != nil {
		in, out := &in.InternalIP, &out.InternalIP
		*out = new(string)
		**out = **in
	}
	if in.InternalPort != nil {
		in, out := &in.InternalPort, &out.InternalPort
		*out = new(string)
		**out = **in
	}
	if in.PortBreak != nil {
		in, out := &in.PortBreak, &out.PortBreak
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardEntryInitParameters.
func (in *ForwardEntryInitParameters) DeepCopy() *ForwardEntryInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardEntryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardEntryList) DeepCopyInto(out *ForwardEntryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ForwardEntry, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardEntryList.
func (in *ForwardEntryList) DeepCopy() *ForwardEntryList {
	if in == nil {
		return nil
	}
	out := new(ForwardEntryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ForwardEntryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardEntryObservation) DeepCopyInto(out *ForwardEntryObservation) {
	*out = *in
	if in.ExternalIP != nil {
		in, out := &in.ExternalIP, &out.ExternalIP
		*out = new(string)
		**out = **in
	}
	if in.ExternalPort != nil {
		in, out := &in.ExternalPort, &out.ExternalPort
		*out = new(string)
		**out = **in
	}
	if in.ForwardEntryID != nil {
		in, out := &in.ForwardEntryID, &out.ForwardEntryID
		*out = new(string)
		**out = **in
	}
	if in.ForwardEntryName != nil {
		in, out := &in.ForwardEntryName, &out.ForwardEntryName
		*out = new(string)
		**out = **in
	}
	if in.ForwardTableID != nil {
		in, out := &in.ForwardTableID, &out.ForwardTableID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.InternalIP != nil {
		in, out := &in.InternalIP, &out.InternalIP
		*out = new(string)
		**out = **in
	}
	if in.InternalPort != nil {
		in, out := &in.InternalPort, &out.InternalPort
		*out = new(string)
		**out = **in
	}
	if in.PortBreak != nil {
		in, out := &in.PortBreak, &out.PortBreak
		*out = new(bool)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardEntryObservation.
func (in *ForwardEntryObservation) DeepCopy() *ForwardEntryObservation {
	if in == nil {
		return nil
	}
	out := new(ForwardEntryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardEntryParameters) DeepCopyInto(out *ForwardEntryParameters) {
	*out = *in
	if in.ExternalIP != nil {
		in, out := &in.ExternalIP, &out.ExternalIP
		*out = new(string)
		**out = **in
	}
	if in.ExternalIPRef != nil {
		in, out := &in.ExternalIPRef, &out.ExternalIPRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ExternalIPSelector != nil {
		in, out := &in.ExternalIPSelector, &out.ExternalIPSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ExternalPort != nil {
		in, out := &in.ExternalPort, &out.ExternalPort
		*out = new(string)
		**out = **in
	}
	if in.ForwardEntryName != nil {
		in, out := &in.ForwardEntryName, &out.ForwardEntryName
		*out = new(string)
		**out = **in
	}
	if in.ForwardTableID != nil {
		in, out := &in.ForwardTableID, &out.ForwardTableID
		*out = new(string)
		**out = **in
	}
	if in.ForwardTableIDRef != nil {
		in, out := &in.ForwardTableIDRef, &out.ForwardTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ForwardTableIDSelector != nil {
		in, out := &in.ForwardTableIDSelector, &out.ForwardTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.InternalIP != nil {
		in, out := &in.InternalIP, &out.InternalIP
		*out = new(string)
		**out = **in
	}
	if in.InternalPort != nil {
		in, out := &in.InternalPort, &out.InternalPort
		*out = new(string)
		**out = **in
	}
	if in.PortBreak != nil {
		in, out := &in.PortBreak, &out.PortBreak
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardEntryParameters.
func (in *ForwardEntryParameters) DeepCopy() *ForwardEntryParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardEntryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardEntrySpec) DeepCopyInto(out *ForwardEntrySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardEntrySpec.
func (in *ForwardEntrySpec) DeepCopy() *ForwardEntrySpec {
	if in == nil {
		return nil
	}
	out := new(ForwardEntrySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardEntryStatus) DeepCopyInto(out *ForwardEntryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardEntryStatus.
func (in *ForwardEntryStatus) DeepCopy() *ForwardEntryStatus {
	if in == nil {
		return nil
	}
	out := new(ForwardEntryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGateway) DeepCopyInto(out *NATGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGateway.
func (in *NATGateway) DeepCopy() *NATGateway {
	if in == nil {
		return nil
	}
	out := new(NATGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NATGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayInitParameters) DeepCopyInto(out *NATGatewayInitParameters) {
	*out = *in
	if in.AccessMode != nil {
		in, out := &in.AccessMode, &out.AccessMode
		*out = make([]AccessModeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BandwidthPackages != nil {
		in, out := &in.BandwidthPackages, &out.BandwidthPackages
		*out = make([]BandwidthPackagesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.EIPBindMode != nil {
		in, out := &in.EIPBindMode, &out.EIPBindMode
		*out = new(string)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.IcmpReplyEnabled != nil {
		in, out := &in.IcmpReplyEnabled, &out.IcmpReplyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.InternetChargeType != nil {
		in, out := &in.InternetChargeType, &out.InternetChargeType
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayName != nil {
		in, out := &in.NATGatewayName, &out.NATGatewayName
		*out = new(string)
		**out = **in
	}
	if in.NATType != nil {
		in, out := &in.NATType, &out.NATType
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.PaymentType != nil {
		in, out := &in.PaymentType, &out.PaymentType
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.PrivateLinkEnabled != nil {
		in, out := &in.PrivateLinkEnabled, &out.PrivateLinkEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(string)
		**out = **in
	}
	if in.Specification != nil {
		in, out := &in.Specification, &out.Specification
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VswitchID != nil {
		in, out := &in.VswitchID, &out.VswitchID
		*out = new(string)
		**out = **in
	}
	if in.VswitchIDRef != nil {
		in, out := &in.VswitchIDRef, &out.VswitchIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VswitchIDSelector != nil {
		in, out := &in.VswitchIDSelector, &out.VswitchIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayInitParameters.
func (in *NATGatewayInitParameters) DeepCopy() *NATGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(NATGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayList) DeepCopyInto(out *NATGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NATGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayList.
func (in *NATGatewayList) DeepCopy() *NATGatewayList {
	if in == nil {
		return nil
	}
	out := new(NATGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NATGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayObservation) DeepCopyInto(out *NATGatewayObservation) {
	*out = *in
	if in.AccessMode != nil {
		in, out := &in.AccessMode, &out.AccessMode
		*out = make([]AccessModeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BandwidthPackageIds != nil {
		in, out := &in.BandwidthPackageIds, &out.BandwidthPackageIds
		*out = new(string)
		**out = **in
	}
	if in.BandwidthPackages != nil {
		in, out := &in.BandwidthPackages, &out.BandwidthPackages
		*out = make([]BandwidthPackagesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.EIPBindMode != nil {
		in, out := &in.EIPBindMode, &out.EIPBindMode
		*out = new(string)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.ForwardTableIds != nil {
		in, out := &in.ForwardTableIds, &out.ForwardTableIds
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IcmpReplyEnabled != nil {
		in, out := &in.IcmpReplyEnabled, &out.IcmpReplyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.InternetChargeType != nil {
		in, out := &in.InternetChargeType, &out.InternetChargeType
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayName != nil {
		in, out := &in.NATGatewayName, &out.NATGatewayName
		*out = new(string)
		**out = **in
	}
	if in.NATType != nil {
		in, out := &in.NATType, &out.NATType
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.PaymentType != nil {
		in, out := &in.PaymentType, &out.PaymentType
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.PrivateLinkEnabled != nil {
		in, out := &in.PrivateLinkEnabled, &out.PrivateLinkEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SnatTableIds != nil {
		in, out := &in.SnatTableIds, &out.SnatTableIds
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(string)
		**out = **in
	}
	if in.Specification != nil {
		in, out := &in.Specification, &out.Specification
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VswitchID != nil {
		in, out := &in.VswitchID, &out.VswitchID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayObservation.
func (in *NATGatewayObservation) DeepCopy() *NATGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(NATGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayParameters) DeepCopyInto(out *NATGatewayParameters) {
	*out = *in
	if in.AccessMode != nil {
		in, out := &in.AccessMode, &out.AccessMode
		*out = make([]AccessModeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BandwidthPackages != nil {
		in, out := &in.BandwidthPackages, &out.BandwidthPackages
		*out = make([]BandwidthPackagesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.EIPBindMode != nil {
		in, out := &in.EIPBindMode, &out.EIPBindMode
		*out = new(string)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.IcmpReplyEnabled != nil {
		in, out := &in.IcmpReplyEnabled, &out.IcmpReplyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.InternetChargeType != nil {
		in, out := &in.InternetChargeType, &out.InternetChargeType
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayName != nil {
		in, out := &in.NATGatewayName, &out.NATGatewayName
		*out = new(string)
		**out = **in
	}
	if in.NATType != nil {
		in, out := &in.NATType, &out.NATType
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.PaymentType != nil {
		in, out := &in.PaymentType, &out.PaymentType
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.PrivateLinkEnabled != nil {
		in, out := &in.PrivateLinkEnabled, &out.PrivateLinkEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(string)
		**out = **in
	}
	if in.Specification != nil {
		in, out := &in.Specification, &out.Specification
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VswitchID != nil {
		in, out := &in.VswitchID, &out.VswitchID
		*out = new(string)
		**out = **in
	}
	if in.VswitchIDRef != nil {
		in, out := &in.VswitchIDRef, &out.VswitchIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VswitchIDSelector != nil {
		in, out := &in.VswitchIDSelector, &out.VswitchIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayParameters.
func (in *NATGatewayParameters) DeepCopy() *NATGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(NATGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewaySpec) DeepCopyInto(out *NATGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewaySpec.
func (in *NATGatewaySpec) DeepCopy() *NATGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(NATGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayStatus) DeepCopyInto(out *NATGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayStatus.
func (in *NATGatewayStatus) DeepCopy() *NATGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(NATGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SNATEntry) DeepCopyInto(out *SNATEntry) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SNATEntry.
func (in *SNATEntry) DeepCopy() *SNATEntry {
	if in == nil {
		return nil
	}
	out := new(SNATEntry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SNATEntry) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SNATEntryInitParameters) DeepCopyInto(out *SNATEntryInitParameters) {
	*out = *in
	if in.EIPAffinity != nil {
		in, out := &in.EIPAffinity, &out.EIPAffinity
		*out = new(float64)
		**out = **in
	}
	if in.SnatEntryName != nil {
		in, out := &in.SnatEntryName, &out.SnatEntryName
		*out = new(string)
		**out = **in
	}
	if in.SnatIP != nil {
		in, out := &in.SnatIP, &out.SnatIP
		*out = new(string)
		**out = **in
	}
	if in.SnatIPRef != nil {
		in, out := &in.SnatIPRef, &out.SnatIPRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SnatIPSelector != nil {
		in, out := &in.SnatIPSelector, &out.SnatIPSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SnatTableID != nil {
		in, out := &in.SnatTableID, &out.SnatTableID
		*out = new(string)
		**out = **in
	}
	if in.SnatTableIDRef != nil {
		in, out := &in.SnatTableIDRef, &out.SnatTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SnatTableIDSelector != nil {
		in, out := &in.SnatTableIDSelector, &out.SnatTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceCidr != nil {
		in, out := &in.SourceCidr, &out.SourceCidr
		*out = new(string)
		**out = **in
	}
	if in.SourceVswitchID != nil {
		in, out := &in.SourceVswitchID, &out.SourceVswitchID
		*out = new(string)
		**out = **in
	}
	if in.SourceVswitchIDRef != nil {
		in, out := &in.SourceVswitchIDRef, &out.SourceVswitchIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceVswitchIDSelector != nil {
		in, out := &in.SourceVswitchIDSelector, &out.SourceVswitchIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SNATEntryInitParameters.
func (in *SNATEntryInitParameters) DeepCopy() *SNATEntryInitParameters {
	if in == nil {
		return nil
	}
	out := new(SNATEntryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SNATEntryList) DeepCopyInto(out *SNATEntryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SNATEntry, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SNATEntryList.
func (in *SNATEntryList) DeepCopy() *SNATEntryList {
	if in == nil {
		return nil
	}
	out := new(SNATEntryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SNATEntryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SNATEntryObservation) DeepCopyInto(out *SNATEntryObservation) {
	*out = *in
	if in.EIPAffinity != nil {
		in, out := &in.EIPAffinity, &out.EIPAffinity
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SnatEntryID != nil {
		in, out := &in.SnatEntryID, &out.SnatEntryID
		*out = new(string)
		**out = **in
	}
	if in.SnatEntryName != nil {
		in, out := &in.SnatEntryName, &out.SnatEntryName
		*out = new(string)
		**out = **in
	}
	if in.SnatIP != nil {
		in, out := &in.SnatIP, &out.SnatIP
		*out = new(string)
		**out = **in
	}
	if in.SnatTableID != nil {
		in, out := &in.SnatTableID, &out.SnatTableID
		*out = new(string)
		**out = **in
	}
	if in.SourceCidr != nil {
		in, out := &in.SourceCidr, &out.SourceCidr
		*out = new(string)
		**out = **in
	}
	if in.SourceVswitchID != nil {
		in, out := &in.SourceVswitchID, &out.SourceVswitchID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SNATEntryObservation.
func (in *SNATEntryObservation) DeepCopy() *SNATEntryObservation {
	if in == nil {
		return nil
	}
	out := new(SNATEntryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SNATEntryParameters) DeepCopyInto(out *SNATEntryParameters) {
	*out = *in
	if in.EIPAffinity != nil {
		in, out := &in.EIPAffinity, &out.EIPAffinity
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SnatEntryName != nil {
		in, out := &in.SnatEntryName, &out.SnatEntryName
		*out = new(string)
		**out = **in
	}
	if in.SnatIP != nil {
		in, out := &in.SnatIP, &out.SnatIP
		*out = new(string)
		**out = **in
	}
	if in.SnatIPRef != nil {
		in, out := &in.SnatIPRef, &out.SnatIPRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SnatIPSelector != nil {
		in, out := &in.SnatIPSelector, &out.SnatIPSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SnatTableID != nil {
		in, out := &in.SnatTableID, &out.SnatTableID
		*out = new(string)
		**out = **in
	}
	if in.SnatTableIDRef != nil {
		in, out := &in.SnatTableIDRef, &out.SnatTableIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SnatTableIDSelector != nil {
		in, out := &in.SnatTableIDSelector, &out.SnatTableIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceCidr != nil {
		in, out := &in.SourceCidr, &out.SourceCidr
		*out = new(string)
		**out = **in
	}
	if in.SourceVswitchID != nil {
		in, out := &in.SourceVswitchID, &out.SourceVswitchID
		*out = new(string)
		**out = **in
	}
	if in.SourceVswitchIDRef != nil {
		in, out := &in.SourceVswitchIDRef, &out.SourceVswitchIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceVswitchIDSelector != nil {
		in, out := &in.SourceVswitchIDSelector, &out.SourceVswitchIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SNATEntryParameters.
func (in *SNATEntryParameters) DeepCopy() *SNATEntryParameters {
	if in == nil {
		return nil
	}
	out := new(SNATEntryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SNATEntrySpec) DeepCopyInto(out *SNATEntrySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SNATEntrySpec.
func (in *SNATEntrySpec) DeepCopy() *SNATEntrySpec {
	if in == nil {
		return nil
	}
	out := new(SNATEntrySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SNATEntryStatus) DeepCopyInto(out *SNATEntryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SNATEntryStatus.
func (in *SNATEntryStatus) DeepCopy() *SNATEntryStatus {
	if in == nil {
		return nil
	}
	out := new(SNATEntryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCNATIP) DeepCopyInto(out *VPCNATIP) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCNATIP.
func (in *VPCNATIP) DeepCopy() *VPCNATIP {
	if in == nil {
		return nil
	}
	out := new(VPCNATIP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCNATIP) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCNATIPInitParameters) DeepCopyInto(out *VPCNATIPInitParameters) {
	*out = *in
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.NATGatewayID != nil {
		in, out := &in.NATGatewayID, &out.NATGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayIDRef != nil {
		in, out := &in.NATGatewayIDRef, &out.NATGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NATGatewayIDSelector != nil {
		in, out := &in.NATGatewayIDSelector, &out.NATGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NATIP != nil {
		in, out := &in.NATIP, &out.NATIP
		*out = new(string)
		**out = **in
	}
	if in.NATIPCidr != nil {
		in, out := &in.NATIPCidr, &out.NATIPCidr
		*out = new(string)
		**out = **in
	}
	if in.NATIPCidrID != nil {
		in, out := &in.NATIPCidrID, &out.NATIPCidrID
		*out = new(string)
		**out = **in
	}
	if in.NATIPDescription != nil {
		in, out := &in.NATIPDescription, &out.NATIPDescription
		*out = new(string)
		**out = **in
	}
	if in.NATIPName != nil {
		in, out := &in.NATIPName, &out.NATIPName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCNATIPInitParameters.
func (in *VPCNATIPInitParameters) DeepCopy() *VPCNATIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCNATIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCNATIPList) DeepCopyInto(out *VPCNATIPList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCNATIP, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCNATIPList.
func (in *VPCNATIPList) DeepCopy() *VPCNATIPList {
	if in == nil {
		return nil
	}
	out := new(VPCNATIPList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCNATIPList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCNATIPObservation) DeepCopyInto(out *VPCNATIPObservation) {
	*out = *in
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayID != nil {
		in, out := &in.NATGatewayID, &out.NATGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NATIP != nil {
		in, out := &in.NATIP, &out.NATIP
		*out = new(string)
		**out = **in
	}
	if in.NATIPCidr != nil {
		in, out := &in.NATIPCidr, &out.NATIPCidr
		*out = new(string)
		**out = **in
	}
	if in.NATIPCidrID != nil {
		in, out := &in.NATIPCidrID, &out.NATIPCidrID
		*out = new(string)
		**out = **in
	}
	if in.NATIPDescription != nil {
		in, out := &in.NATIPDescription, &out.NATIPDescription
		*out = new(string)
		**out = **in
	}
	if in.NATIPID != nil {
		in, out := &in.NATIPID, &out.NATIPID
		*out = new(string)
		**out = **in
	}
	if in.NATIPName != nil {
		in, out := &in.NATIPName, &out.NATIPName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCNATIPObservation.
func (in *VPCNATIPObservation) DeepCopy() *VPCNATIPObservation {
	if in == nil {
		return nil
	}
	out := new(VPCNATIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCNATIPParameters) DeepCopyInto(out *VPCNATIPParameters) {
	*out = *in
	if in.DryRun != nil {
		in, out := &in.DryRun, &out.DryRun
		*out = new(bool)
		**out = **in
	}
	if in.NATGatewayID != nil {
		in, out := &in.NATGatewayID, &out.NATGatewayID
		*out = new(string)
		**out = **in
	}
	if in.NATGatewayIDRef != nil {
		in, out := &in.NATGatewayIDRef, &out.NATGatewayIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NATGatewayIDSelector != nil {
		in, out := &in.NATGatewayIDSelector, &out.NATGatewayIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NATIP != nil {
		in, out := &in.NATIP, &out.NATIP
		*out = new(string)
		**out = **in
	}
	if in.NATIPCidr != nil {
		in, out := &in.NATIPCidr, &out.NATIPCidr
		*out = new(string)
		**out = **in
	}
	if in.NATIPCidrID != nil {
		in, out := &in.NATIPCidrID, &out.NATIPCidrID
		*out = new(string)
		**out = **in
	}
	if in.NATIPDescription != nil {
		in, out := &in.NATIPDescription, &out.NATIPDescription
		*out = new(string)
		**out = **in
	}
	if in.NATIPName != nil {
		in, out := &in.NATIPName, &out.NATIPName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCNATIPParameters.
func (in *VPCNATIPParameters) DeepCopy() *VPCNATIPParameters {
	if in == nil {
		return nil
	}
	out := new(VPCNATIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCNATIPSpec) DeepCopyInto(out *VPCNATIPSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCNATIPSpec.
func (in *VPCNATIPSpec) DeepCopy() *VPCNATIPSpec {
	if in == nil {
		return nil
	}
	out := new(VPCNATIPSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCNATIPStatus) DeepCopyInto(out *VPCNATIPStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCNATIPStatus.
func (in *VPCNATIPStatus) DeepCopy() *VPCNATIPStatus {
	if in == nil {
		return nil
	}
	out := new(VPCNATIPStatus)
	in.DeepCopyInto(out)
	return out
}
