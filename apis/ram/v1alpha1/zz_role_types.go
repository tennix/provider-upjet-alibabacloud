// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type RoleInitParameters struct {

	// The trust policy that specifies one or more trusted entities to assume the RAM role. The trusted entities can be Alibaba Cloud accounts, Alibaba Cloud services, or identity providers (IdPs).
	AssumeRolePolicyDocument *string `json:"assumeRolePolicyDocument,omitempty" tf:"assume_role_policy_document,omitempty"`

	// The description of the RAM role.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Field document has been deprecated from provider version 1.252.0. New field assume_role_policy_document instead.
	Document *string `json:"document,omitempty" tf:"document,omitempty"`

	// Specifies whether to force delete the Role. Default value: false. Valid values:
	Force *bool `json:"force,omitempty" tf:"force,omitempty"`

	// The maximum session time of the RAM role. Default value: 3600. Valid values: 3600 to 43200.
	MaxSessionDuration *float64 `json:"maxSessionDuration,omitempty" tf:"max_session_duration,omitempty"`

	// Field name has been deprecated from provider version 1.252.0. New field role_name instead.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The name of the RAM role.
	RoleName *string `json:"roleName,omitempty" tf:"role_name,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type RoleObservation struct {

	// The Alibaba Cloud Resource Name (ARN) of the RAM role.
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// The trust policy that specifies one or more trusted entities to assume the RAM role. The trusted entities can be Alibaba Cloud accounts, Alibaba Cloud services, or identity providers (IdPs).
	AssumeRolePolicyDocument *string `json:"assumeRolePolicyDocument,omitempty" tf:"assume_role_policy_document,omitempty"`

	// (Available since v1.252.0) The time when the RAM role was created.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// The description of the RAM role.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Field document has been deprecated from provider version 1.252.0. New field assume_role_policy_document instead.
	Document *string `json:"document,omitempty" tf:"document,omitempty"`

	// Specifies whether to force delete the Role. Default value: false. Valid values:
	Force *bool `json:"force,omitempty" tf:"force,omitempty"`

	// The ID of the resource supplied above.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The maximum session time of the RAM role. Default value: 3600. Valid values: 3600 to 43200.
	MaxSessionDuration *float64 `json:"maxSessionDuration,omitempty" tf:"max_session_duration,omitempty"`

	// Field name has been deprecated from provider version 1.252.0. New field role_name instead.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the RAM role.
	RoleID *string `json:"roleId,omitempty" tf:"role_id,omitempty"`

	// The name of the RAM role.
	RoleName *string `json:"roleName,omitempty" tf:"role_name,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type RoleParameters struct {

	// The trust policy that specifies one or more trusted entities to assume the RAM role. The trusted entities can be Alibaba Cloud accounts, Alibaba Cloud services, or identity providers (IdPs).
	// +kubebuilder:validation:Optional
	AssumeRolePolicyDocument *string `json:"assumeRolePolicyDocument,omitempty" tf:"assume_role_policy_document,omitempty"`

	// The description of the RAM role.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Field document has been deprecated from provider version 1.252.0. New field assume_role_policy_document instead.
	// +kubebuilder:validation:Optional
	Document *string `json:"document,omitempty" tf:"document,omitempty"`

	// Specifies whether to force delete the Role. Default value: false. Valid values:
	// +kubebuilder:validation:Optional
	Force *bool `json:"force,omitempty" tf:"force,omitempty"`

	// The maximum session time of the RAM role. Default value: 3600. Valid values: 3600 to 43200.
	// +kubebuilder:validation:Optional
	MaxSessionDuration *float64 `json:"maxSessionDuration,omitempty" tf:"max_session_duration,omitempty"`

	// Field name has been deprecated from provider version 1.252.0. New field role_name instead.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The name of the RAM role.
	// +kubebuilder:validation:Optional
	RoleName *string `json:"roleName,omitempty" tf:"role_name,omitempty"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// RoleSpec defines the desired state of Role
type RoleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RoleParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider RoleInitParameters `json:"initProvider,omitempty"`
}

// RoleStatus defines the observed state of Role.
type RoleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RoleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Role is the Schema for the Roles API. Provides a Alicloud RAM Role resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type Role struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              RoleSpec   `json:"spec"`
	Status            RoleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RoleList contains a list of Roles
type RoleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Role `json:"items"`
}

// Repository type metadata.
var (
	Role_Kind             = "Role"
	Role_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Role_Kind}.String()
	Role_KindAPIVersion   = Role_Kind + "." + CRDGroupVersion.String()
	Role_GroupVersionKind = CRDGroupVersion.WithKind(Role_Kind)
)

func init() {
	SchemeBuilder.Register(&Role{}, &RoleList{})
}
