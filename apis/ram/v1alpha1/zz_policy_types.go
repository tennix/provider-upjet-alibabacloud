// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PolicyInitParameters struct {

	// The description of the policy. It can be 1 to 1024 characters in length.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies whether to force delete the Policy. Default value: false. Valid values:
	Force *bool `json:"force,omitempty" tf:"force,omitempty"`

	// The content of the policy. The maximum length is 6144 bytes.
	PolicyDocument *string `json:"policyDocument,omitempty" tf:"policy_document,omitempty"`

	// The policy name. It can be 1 to 128 characters in length and can contain English letters, digits, and dashes (-).
	PolicyName *string `json:"policyName,omitempty" tf:"policy_name,omitempty"`

	// The automatic rotation mechanism of policy versions can delete historical policy versions. The default value is None. Valid values:
	RotateStrategy *string `json:"rotateStrategy,omitempty" tf:"rotate_strategy,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type PolicyObservation struct {

	// Number of attachments of the policy.
	AttachmentCount *float64 `json:"attachmentCount,omitempty" tf:"attachment_count,omitempty"`

	// (Available since v1.246.0) The create time of the policy.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// The default version ID of the policy.
	DefaultVersion *string `json:"defaultVersion,omitempty" tf:"default_version,omitempty"`

	// The description of the policy. It can be 1 to 1024 characters in length.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies whether to force delete the Policy. Default value: false. Valid values:
	Force *bool `json:"force,omitempty" tf:"force,omitempty"`

	// The ID of the resource supplied above.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The content of the policy. The maximum length is 6144 bytes.
	PolicyDocument *string `json:"policyDocument,omitempty" tf:"policy_document,omitempty"`

	// The policy name. It can be 1 to 128 characters in length and can contain English letters, digits, and dashes (-).
	PolicyName *string `json:"policyName,omitempty" tf:"policy_name,omitempty"`

	// The automatic rotation mechanism of policy versions can delete historical policy versions. The default value is None. Valid values:
	RotateStrategy *string `json:"rotateStrategy,omitempty" tf:"rotate_strategy,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The type of the policy.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The ID of the default policy version.
	VersionID *string `json:"versionId,omitempty" tf:"version_id,omitempty"`
}

type PolicyParameters struct {

	// The description of the policy. It can be 1 to 1024 characters in length.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies whether to force delete the Policy. Default value: false. Valid values:
	// +kubebuilder:validation:Optional
	Force *bool `json:"force,omitempty" tf:"force,omitempty"`

	// The content of the policy. The maximum length is 6144 bytes.
	// +kubebuilder:validation:Optional
	PolicyDocument *string `json:"policyDocument,omitempty" tf:"policy_document,omitempty"`

	// The policy name. It can be 1 to 128 characters in length and can contain English letters, digits, and dashes (-).
	// +kubebuilder:validation:Optional
	PolicyName *string `json:"policyName,omitempty" tf:"policy_name,omitempty"`

	// The automatic rotation mechanism of policy versions can delete historical policy versions. The default value is None. Valid values:
	// +kubebuilder:validation:Optional
	RotateStrategy *string `json:"rotateStrategy,omitempty" tf:"rotate_strategy,omitempty"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// PolicySpec defines the desired state of Policy
type PolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PolicyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PolicyInitParameters `json:"initProvider,omitempty"`
}

// PolicyStatus defines the observed state of Policy.
type PolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Policy is the Schema for the Policys API. Provides a Alicloud RAM Policy resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type Policy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              PolicySpec   `json:"spec"`
	Status            PolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyList contains a list of Policys
type PolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Policy `json:"items"`
}

// Repository type metadata.
var (
	Policy_Kind             = "Policy"
	Policy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Policy_Kind}.String()
	Policy_KindAPIVersion   = Policy_Kind + "." + CRDGroupVersion.String()
	Policy_GroupVersionKind = CRDGroupVersion.WithKind(Policy_Kind)
)

func init() {
	SchemeBuilder.Register(&Policy{}, &PolicyList{})
}
