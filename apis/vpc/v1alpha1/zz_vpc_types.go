// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type IPv6CidrBlocksInitParameters struct {
}

type IPv6CidrBlocksObservation struct {

	// The IPv6 CIDR block of the default VPC.
	IPv6CidrBlock *string `json:"ipv6CidrBlock,omitempty" tf:"ipv6_cidr_block,omitempty"`

	// The IPv6 address segment type of the VPC. Value:
	IPv6Isp *string `json:"ipv6Isp,omitempty" tf:"ipv6_isp,omitempty"`
}

type IPv6CidrBlocksParameters struct {
}

type VPCInitParameters struct {

	// The CIDR block of the VPC.
	CidrBlock *string `json:"cidrBlock,omitempty" tf:"cidr_block,omitempty"`

	// The status of ClassicLink function.
	ClassicLinkEnabled *bool `json:"classicLinkEnabled,omitempty" tf:"classic_link_enabled,omitempty"`

	// The status of VPC DNS Hostname
	DNSHostnameStatus *string `json:"dnsHostnameStatus,omitempty" tf:"dns_hostname_status,omitempty"`

	// The new description of the VPC.
	// The description must be 1 to 256 characters in length, and cannot start with http:// or https://.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Whether to PreCheck only this request. Value:
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// Whether to enable the IPv6 network segment. Value:
	EnableIPv6 *bool `json:"enableIpv6,omitempty" tf:"enable_ipv6,omitempty"`

	// Force delete vpc or not.
	ForceDelete *bool `json:"forceDelete,omitempty" tf:"force_delete,omitempty"`

	// Allocate VPC from The IPAM address pool by entering a mask.
	IPv4CidrMask *float64 `json:"ipv4CidrMask,omitempty" tf:"ipv4_cidr_mask,omitempty"`

	// The ID of the IP Address Manager (IPAM) pool that contains IPv4 addresses.
	IPv4IpamPoolID *string `json:"ipv4IpamPoolId,omitempty" tf:"ipv4_ipam_pool_id,omitempty"`

	// The IPv6 CIDR block of the default VPC.
	IPv6CidrBlock *string `json:"ipv6CidrBlock,omitempty" tf:"ipv6_cidr_block,omitempty"`

	// The IPv6 address segment type of the VPC. Value:
	IPv6Isp *string `json:"ipv6Isp,omitempty" tf:"ipv6_isp,omitempty"`

	// Specifies whether to create the default VPC in the specified region. Valid values:
	IsDefault *bool `json:"isDefault,omitempty" tf:"is_default,omitempty"`

	// (Deprecated since v1.119.0). Field 'name' has been deprecated from provider version 1.119.0. New field 'vpc_name' instead.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the resource group to which you want to move the resource.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// Field 'secondary_cidr_blocks' has been deprecated from provider version 1.185.0 and it will be removed in the future version. Please use the new resource 'alicloud_vpc_ipv4_cidr_block'. secondary_cidr_blocks attributes and alicloud_vpc_ipv4_cidr_block resource cannot be used at the same time.
	SecondaryCidrBlocks []*string `json:"secondaryCidrBlocks,omitempty" tf:"secondary_cidr_blocks,omitempty"`

	// (Deprecated since v1.248.0) Field 'router_table_id' has been deprecated from provider version 1.248.0. New resource 'alicloud_vpc_ipv4_cidr_block' instead.
	SecondaryCidrMask *float64 `json:"secondaryCidrMask,omitempty" tf:"secondary_cidr_mask,omitempty"`

	// The description of the route table.
	// The description must be 1 to 256 characters in length, and cannot start with http:// or https://.
	SystemRouteTableDescription *string `json:"systemRouteTableDescription,omitempty" tf:"system_route_table_description,omitempty"`

	// The name of the route table.
	// The name must be 1 to 128 characters in length and cannot start with http:// or https://.
	SystemRouteTableName *string `json:"systemRouteTableName,omitempty" tf:"system_route_table_name,omitempty"`

	// Whether the system route table receives propagation routes.
	SystemRouteTableRoutePropagationEnable *bool `json:"systemRouteTableRoutePropagationEnable,omitempty" tf:"system_route_table_route_propagation_enable,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// A list of user CIDRs.
	UserCidrs []*string `json:"userCidrs,omitempty" tf:"user_cidrs,omitempty"`

	// The new name of the VPC.
	// The name must be 1 to 128 characters in length and cannot start with http:// or https://.
	VPCName *string `json:"vpcName,omitempty" tf:"vpc_name,omitempty"`
}

type VPCObservation struct {

	// The CIDR block of the VPC.
	CidrBlock *string `json:"cidrBlock,omitempty" tf:"cidr_block,omitempty"`

	// The status of ClassicLink function.
	ClassicLinkEnabled *bool `json:"classicLinkEnabled,omitempty" tf:"classic_link_enabled,omitempty"`

	// The creation time of the VPC.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// The status of VPC DNS Hostname
	DNSHostnameStatus *string `json:"dnsHostnameStatus,omitempty" tf:"dns_hostname_status,omitempty"`

	// The new description of the VPC.
	// The description must be 1 to 256 characters in length, and cannot start with http:// or https://.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Whether to PreCheck only this request. Value:
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// Whether to enable the IPv6 network segment. Value:
	EnableIPv6 *bool `json:"enableIpv6,omitempty" tf:"enable_ipv6,omitempty"`

	// Force delete vpc or not.
	ForceDelete *bool `json:"forceDelete,omitempty" tf:"force_delete,omitempty"`

	// The ID of the resource supplied above.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Allocate VPC from The IPAM address pool by entering a mask.
	IPv4CidrMask *float64 `json:"ipv4CidrMask,omitempty" tf:"ipv4_cidr_mask,omitempty"`

	// The ID of the IP Address Manager (IPAM) pool that contains IPv4 addresses.
	IPv4IpamPoolID *string `json:"ipv4IpamPoolId,omitempty" tf:"ipv4_ipam_pool_id,omitempty"`

	// The IPv6 CIDR block of the default VPC.
	IPv6CidrBlock *string `json:"ipv6CidrBlock,omitempty" tf:"ipv6_cidr_block,omitempty"`

	// The IPv6 CIDR block information of the VPC.
	IPv6CidrBlocks []IPv6CidrBlocksObservation `json:"ipv6CidrBlocks,omitempty" tf:"ipv6_cidr_blocks,omitempty"`

	// The IPv6 address segment type of the VPC. Value:
	IPv6Isp *string `json:"ipv6Isp,omitempty" tf:"ipv6_isp,omitempty"`

	// Specifies whether to create the default VPC in the specified region. Valid values:
	IsDefault *bool `json:"isDefault,omitempty" tf:"is_default,omitempty"`

	// (Deprecated since v1.119.0). Field 'name' has been deprecated from provider version 1.119.0. New field 'vpc_name' instead.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the region where the VPC is located.
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`

	// The ID of the resource group to which you want to move the resource.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The ID of the system route table.
	RouteTableID *string `json:"routeTableId,omitempty" tf:"route_table_id,omitempty"`

	// The region ID of the VPC to which the route table belongs.
	RouterID *string `json:"routerId,omitempty" tf:"router_id,omitempty"`

	// (Deprecated since v1.227.1). Field 'router_table_id' has been deprecated from provider version 1.227.1. New field 'route_table_id' instead.
	RouterTableID *string `json:"routerTableId,omitempty" tf:"router_table_id,omitempty"`

	// Field 'secondary_cidr_blocks' has been deprecated from provider version 1.185.0 and it will be removed in the future version. Please use the new resource 'alicloud_vpc_ipv4_cidr_block'. secondary_cidr_blocks attributes and alicloud_vpc_ipv4_cidr_block resource cannot be used at the same time.
	SecondaryCidrBlocks []*string `json:"secondaryCidrBlocks,omitempty" tf:"secondary_cidr_blocks,omitempty"`

	// (Deprecated since v1.248.0) Field 'router_table_id' has been deprecated from provider version 1.248.0. New resource 'alicloud_vpc_ipv4_cidr_block' instead.
	SecondaryCidrMask *float64 `json:"secondaryCidrMask,omitempty" tf:"secondary_cidr_mask,omitempty"`

	// The status of the VPC.   Pending: The VPC is being configured. Available: The VPC is available.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// The description of the route table.
	// The description must be 1 to 256 characters in length, and cannot start with http:// or https://.
	SystemRouteTableDescription *string `json:"systemRouteTableDescription,omitempty" tf:"system_route_table_description,omitempty"`

	// The name of the route table.
	// The name must be 1 to 128 characters in length and cannot start with http:// or https://.
	SystemRouteTableName *string `json:"systemRouteTableName,omitempty" tf:"system_route_table_name,omitempty"`

	// Whether the system route table receives propagation routes.
	SystemRouteTableRoutePropagationEnable *bool `json:"systemRouteTableRoutePropagationEnable,omitempty" tf:"system_route_table_route_propagation_enable,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// A list of user CIDRs.
	UserCidrs []*string `json:"userCidrs,omitempty" tf:"user_cidrs,omitempty"`

	// The new name of the VPC.
	// The name must be 1 to 128 characters in length and cannot start with http:// or https://.
	VPCName *string `json:"vpcName,omitempty" tf:"vpc_name,omitempty"`
}

type VPCParameters struct {

	// The CIDR block of the VPC.
	// +kubebuilder:validation:Optional
	CidrBlock *string `json:"cidrBlock,omitempty" tf:"cidr_block,omitempty"`

	// The status of ClassicLink function.
	// +kubebuilder:validation:Optional
	ClassicLinkEnabled *bool `json:"classicLinkEnabled,omitempty" tf:"classic_link_enabled,omitempty"`

	// The status of VPC DNS Hostname
	// +kubebuilder:validation:Optional
	DNSHostnameStatus *string `json:"dnsHostnameStatus,omitempty" tf:"dns_hostname_status,omitempty"`

	// The new description of the VPC.
	// The description must be 1 to 256 characters in length, and cannot start with http:// or https://.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Whether to PreCheck only this request. Value:
	// +kubebuilder:validation:Optional
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// Whether to enable the IPv6 network segment. Value:
	// +kubebuilder:validation:Optional
	EnableIPv6 *bool `json:"enableIpv6,omitempty" tf:"enable_ipv6,omitempty"`

	// Force delete vpc or not.
	// +kubebuilder:validation:Optional
	ForceDelete *bool `json:"forceDelete,omitempty" tf:"force_delete,omitempty"`

	// Allocate VPC from The IPAM address pool by entering a mask.
	// +kubebuilder:validation:Optional
	IPv4CidrMask *float64 `json:"ipv4CidrMask,omitempty" tf:"ipv4_cidr_mask,omitempty"`

	// The ID of the IP Address Manager (IPAM) pool that contains IPv4 addresses.
	// +kubebuilder:validation:Optional
	IPv4IpamPoolID *string `json:"ipv4IpamPoolId,omitempty" tf:"ipv4_ipam_pool_id,omitempty"`

	// The IPv6 CIDR block of the default VPC.
	// +kubebuilder:validation:Optional
	IPv6CidrBlock *string `json:"ipv6CidrBlock,omitempty" tf:"ipv6_cidr_block,omitempty"`

	// The IPv6 address segment type of the VPC. Value:
	// +kubebuilder:validation:Optional
	IPv6Isp *string `json:"ipv6Isp,omitempty" tf:"ipv6_isp,omitempty"`

	// Specifies whether to create the default VPC in the specified region. Valid values:
	// +kubebuilder:validation:Optional
	IsDefault *bool `json:"isDefault,omitempty" tf:"is_default,omitempty"`

	// (Deprecated since v1.119.0). Field 'name' has been deprecated from provider version 1.119.0. New field 'vpc_name' instead.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// The ID of the resource group to which you want to move the resource.
	// +kubebuilder:validation:Optional
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// Field 'secondary_cidr_blocks' has been deprecated from provider version 1.185.0 and it will be removed in the future version. Please use the new resource 'alicloud_vpc_ipv4_cidr_block'. secondary_cidr_blocks attributes and alicloud_vpc_ipv4_cidr_block resource cannot be used at the same time.
	// +kubebuilder:validation:Optional
	SecondaryCidrBlocks []*string `json:"secondaryCidrBlocks,omitempty" tf:"secondary_cidr_blocks,omitempty"`

	// (Deprecated since v1.248.0) Field 'router_table_id' has been deprecated from provider version 1.248.0. New resource 'alicloud_vpc_ipv4_cidr_block' instead.
	// +kubebuilder:validation:Optional
	SecondaryCidrMask *float64 `json:"secondaryCidrMask,omitempty" tf:"secondary_cidr_mask,omitempty"`

	// The description of the route table.
	// The description must be 1 to 256 characters in length, and cannot start with http:// or https://.
	// +kubebuilder:validation:Optional
	SystemRouteTableDescription *string `json:"systemRouteTableDescription,omitempty" tf:"system_route_table_description,omitempty"`

	// The name of the route table.
	// The name must be 1 to 128 characters in length and cannot start with http:// or https://.
	// +kubebuilder:validation:Optional
	SystemRouteTableName *string `json:"systemRouteTableName,omitempty" tf:"system_route_table_name,omitempty"`

	// Whether the system route table receives propagation routes.
	// +kubebuilder:validation:Optional
	SystemRouteTableRoutePropagationEnable *bool `json:"systemRouteTableRoutePropagationEnable,omitempty" tf:"system_route_table_route_propagation_enable,omitempty"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// A list of user CIDRs.
	// +kubebuilder:validation:Optional
	UserCidrs []*string `json:"userCidrs,omitempty" tf:"user_cidrs,omitempty"`

	// The new name of the VPC.
	// The name must be 1 to 128 characters in length and cannot start with http:// or https://.
	// +kubebuilder:validation:Optional
	VPCName *string `json:"vpcName,omitempty" tf:"vpc_name,omitempty"`
}

// VPCSpec defines the desired state of VPC
type VPCSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VPCParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider VPCInitParameters `json:"initProvider,omitempty"`
}

// VPCStatus defines the observed state of VPC.
type VPCStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VPCObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// VPC is the Schema for the VPCs API. Provides a Alicloud VPC VPC resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type VPC struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VPCSpec   `json:"spec"`
	Status            VPCStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VPCList contains a list of VPCs
type VPCList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VPC `json:"items"`
}

// Repository type metadata.
var (
	VPC_Kind             = "VPC"
	VPC_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VPC_Kind}.String()
	VPC_KindAPIVersion   = VPC_Kind + "." + CRDGroupVersion.String()
	VPC_GroupVersionKind = CRDGroupVersion.WithKind(VPC_Kind)
)

func init() {
	SchemeBuilder.Register(&VPC{}, &VPCList{})
}
