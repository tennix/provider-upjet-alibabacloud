// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type VPCPeerConnectionInitParameters struct {

	// The ID of the Alibaba Cloud account to which the accepter VPC belongs.
	AcceptingAliUID *float64 `json:"acceptingAliUid,omitempty" tf:"accepting_ali_uid,omitempty"`

	// The region ID of the accepter VPC of the VPC peering connection that you want to create.
	AcceptingRegionID *string `json:"acceptingRegionId,omitempty" tf:"accepting_region_id,omitempty"`

	// The ID of the accepter VPC.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/vpc/v1alpha1.VPC
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	AcceptingVPCID *string `json:"acceptingVpcId,omitempty" tf:"accepting_vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate acceptingVpcId.
	// +kubebuilder:validation:Optional
	AcceptingVPCIDRef *v1.Reference `json:"acceptingVpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate acceptingVpcId.
	// +kubebuilder:validation:Optional
	AcceptingVPCIDSelector *v1.Selector `json:"acceptingVpcIdSelector,omitempty" tf:"-"`

	// The bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0. Before you specify this parameter, make sure that you create an inter-region VPC peering connection.
	Bandwidth *float64 `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// The description of the VPC peering connection.
	// The description must be 2 to 256 characters in length. The description must start with a letter but cannot start with http:// or https://.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// Specifies whether to forcefully delete the VPC peering connection. Valid values:
	ForceDelete *bool `json:"forceDelete,omitempty" tf:"force_delete,omitempty"`

	// The link type of the VPC peering connection that you want to create. Valid values:
	LinkType *string `json:"linkType,omitempty" tf:"link_type,omitempty"`

	// The name of the VPC peering connection.
	// The name must be 2 to 128 characters in length, and can contain digits, underscores (_), and hyphens (-). It must start with a letter.
	PeerConnectionName *string `json:"peerConnectionName,omitempty" tf:"peer_connection_name,omitempty"`

	// The ID of the new resource group.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The status of the resource
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The ID of the requester VPC or accepter VPC of the VPC peering connection that you want to query.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/vpc/v1alpha1.VPC
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`
}

type VPCPeerConnectionObservation struct {

	// The ID of the Alibaba Cloud account to which the accepter VPC belongs.
	AcceptingAliUID *float64 `json:"acceptingAliUid,omitempty" tf:"accepting_ali_uid,omitempty"`

	// The region ID of the accepter VPC of the VPC peering connection that you want to create.
	AcceptingRegionID *string `json:"acceptingRegionId,omitempty" tf:"accepting_region_id,omitempty"`

	// The ID of the accepter VPC.
	AcceptingVPCID *string `json:"acceptingVpcId,omitempty" tf:"accepting_vpc_id,omitempty"`

	// The bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0. Before you specify this parameter, make sure that you create an inter-region VPC peering connection.
	Bandwidth *float64 `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// The creation time of the VPC peer connection. Use UTC time in the format' YYYY-MM-DDThh:mm:ssZ '.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// The description of the VPC peering connection.
	// The description must be 2 to 256 characters in length. The description must start with a letter but cannot start with http:// or https://.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// Specifies whether to forcefully delete the VPC peering connection. Valid values:
	ForceDelete *bool `json:"forceDelete,omitempty" tf:"force_delete,omitempty"`

	// The ID of the resource supplied above.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The link type of the VPC peering connection that you want to create. Valid values:
	LinkType *string `json:"linkType,omitempty" tf:"link_type,omitempty"`

	// The name of the VPC peering connection.
	// The name must be 2 to 128 characters in length, and can contain digits, underscores (_), and hyphens (-). It must start with a letter.
	PeerConnectionName *string `json:"peerConnectionName,omitempty" tf:"peer_connection_name,omitempty"`

	// The region ID of the resource to which you want to create and add tags.
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`

	// The ID of the new resource group.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The status of the resource
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The ID of the requester VPC or accepter VPC of the VPC peering connection that you want to query.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

type VPCPeerConnectionParameters struct {

	// The ID of the Alibaba Cloud account to which the accepter VPC belongs.
	// +kubebuilder:validation:Optional
	AcceptingAliUID *float64 `json:"acceptingAliUid,omitempty" tf:"accepting_ali_uid,omitempty"`

	// The region ID of the accepter VPC of the VPC peering connection that you want to create.
	// +kubebuilder:validation:Optional
	AcceptingRegionID *string `json:"acceptingRegionId,omitempty" tf:"accepting_region_id,omitempty"`

	// The ID of the accepter VPC.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/vpc/v1alpha1.VPC
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	AcceptingVPCID *string `json:"acceptingVpcId,omitempty" tf:"accepting_vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate acceptingVpcId.
	// +kubebuilder:validation:Optional
	AcceptingVPCIDRef *v1.Reference `json:"acceptingVpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate acceptingVpcId.
	// +kubebuilder:validation:Optional
	AcceptingVPCIDSelector *v1.Selector `json:"acceptingVpcIdSelector,omitempty" tf:"-"`

	// The bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0. Before you specify this parameter, make sure that you create an inter-region VPC peering connection.
	// +kubebuilder:validation:Optional
	Bandwidth *float64 `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// The description of the VPC peering connection.
	// The description must be 2 to 256 characters in length. The description must start with a letter but cannot start with http:// or https://.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
	// +kubebuilder:validation:Optional
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// Specifies whether to forcefully delete the VPC peering connection. Valid values:
	// +kubebuilder:validation:Optional
	ForceDelete *bool `json:"forceDelete,omitempty" tf:"force_delete,omitempty"`

	// The link type of the VPC peering connection that you want to create. Valid values:
	// +kubebuilder:validation:Optional
	LinkType *string `json:"linkType,omitempty" tf:"link_type,omitempty"`

	// The name of the VPC peering connection.
	// The name must be 2 to 128 characters in length, and can contain digits, underscores (_), and hyphens (-). It must start with a letter.
	// +kubebuilder:validation:Optional
	PeerConnectionName *string `json:"peerConnectionName,omitempty" tf:"peer_connection_name,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// The ID of the new resource group.
	// +kubebuilder:validation:Optional
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The status of the resource
	// +kubebuilder:validation:Optional
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The ID of the requester VPC or accepter VPC of the VPC peering connection that you want to query.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/vpc/v1alpha1.VPC
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`
}

// VPCPeerConnectionSpec defines the desired state of VPCPeerConnection
type VPCPeerConnectionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VPCPeerConnectionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider VPCPeerConnectionInitParameters `json:"initProvider,omitempty"`
}

// VPCPeerConnectionStatus defines the observed state of VPCPeerConnection.
type VPCPeerConnectionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VPCPeerConnectionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// VPCPeerConnection is the Schema for the VPCPeerConnections API. Provides a Alicloud Vpc Peer Peer Connection resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type VPCPeerConnection struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.acceptingRegionId) || (has(self.initProvider) && has(self.initProvider.acceptingRegionId))",message="spec.forProvider.acceptingRegionId is a required parameter"
	Spec   VPCPeerConnectionSpec   `json:"spec"`
	Status VPCPeerConnectionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VPCPeerConnectionList contains a list of VPCPeerConnections
type VPCPeerConnectionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VPCPeerConnection `json:"items"`
}

// Repository type metadata.
var (
	VPCPeerConnection_Kind             = "VPCPeerConnection"
	VPCPeerConnection_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VPCPeerConnection_Kind}.String()
	VPCPeerConnection_KindAPIVersion   = VPCPeerConnection_Kind + "." + CRDGroupVersion.String()
	VPCPeerConnection_GroupVersionKind = CRDGroupVersion.WithKind(VPCPeerConnection_Kind)
)

func init() {
	SchemeBuilder.Register(&VPCPeerConnection{}, &VPCPeerConnectionList{})
}
