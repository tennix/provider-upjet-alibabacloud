// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type VPCPeerConnectionAccepterInitParameters struct {

	// The new bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0.
	Bandwidth *float64 `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// The new description of the VPC peering connection.
	// The description must be 1 to 256 characters in length, and cannot start with http:// or https://.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// Specifies whether to forcefully delete the VPC peering connection. Valid values:
	ForceDelete *bool `json:"forceDelete,omitempty" tf:"force_delete,omitempty"`

	// The ID of the VPC peering connection whose name or description you want to modify.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/vpc/v1alpha1.VPCPeerConnection
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a VPCPeerConnection in vpc to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a VPCPeerConnection in vpc to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Link Type
	LinkType *string `json:"linkType,omitempty" tf:"link_type,omitempty"`

	// The new name of the VPC peering connection.
	// The name must be 1 to 128 characters in length, and cannot start with http:// or https://.
	PeerConnectionAccepterName *string `json:"peerConnectionAccepterName,omitempty" tf:"peer_connection_accepter_name,omitempty"`

	// The ID of the new resource group.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`
}

type VPCPeerConnectionAccepterObservation struct {

	// The ID of the Alibaba Cloud account (primary account) of the receiving end of the VPC peering connection to be created.-to-peer connection to the VPC account.-account VPC peer-to-peer connection.
	AcceptingOwnerUID *float64 `json:"acceptingOwnerUid,omitempty" tf:"accepting_owner_uid,omitempty"`

	// The region ID of the recipient of the VPC peering connection to be created.-to-peer connection in the same region, enter the same region ID as the region ID of the initiator.-region VPC peer-to-peer connection, enter a region ID that is different from the region ID of the initiator.
	AcceptingRegionID *string `json:"acceptingRegionId,omitempty" tf:"accepting_region_id,omitempty"`

	// The VPC ID of the receiving end of the VPC peer connection.
	AcceptingVPCID *string `json:"acceptingVpcId,omitempty" tf:"accepting_vpc_id,omitempty"`

	// The new bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0.
	Bandwidth *float64 `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// The creation time of the VPC peer connection. Use UTC time in the format' YYYY-MM-DDThh:mm:ssZ '.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// The new description of the VPC peering connection.
	// The description must be 1 to 256 characters in length, and cannot start with http:// or https://.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// Specifies whether to forcefully delete the VPC peering connection. Valid values:
	ForceDelete *bool `json:"forceDelete,omitempty" tf:"force_delete,omitempty"`

	// The ID of the resource supplied above.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID of the VPC peering connection whose name or description you want to modify.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Link Type
	LinkType *string `json:"linkType,omitempty" tf:"link_type,omitempty"`

	// The new name of the VPC peering connection.
	// The name must be 1 to 128 characters in length, and cannot start with http:// or https://.
	PeerConnectionAccepterName *string `json:"peerConnectionAccepterName,omitempty" tf:"peer_connection_accepter_name,omitempty"`

	// The ID of the region where you want to query VPC peering connections.
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`

	// The ID of the new resource group.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The status of the resource
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// The VPC ID of the initiator of the VPC peering connection.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

type VPCPeerConnectionAccepterParameters struct {

	// The new bandwidth of the VPC peering connection. Unit: Mbit/s. The value must be an integer greater than 0.
	// +kubebuilder:validation:Optional
	Bandwidth *float64 `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// The new description of the VPC peering connection.
	// The description must be 1 to 256 characters in length, and cannot start with http:// or https://.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies whether to perform only a dry run, without performing the actual request. Valid values:
	// +kubebuilder:validation:Optional
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// Specifies whether to forcefully delete the VPC peering connection. Valid values:
	// +kubebuilder:validation:Optional
	ForceDelete *bool `json:"forceDelete,omitempty" tf:"force_delete,omitempty"`

	// The ID of the VPC peering connection whose name or description you want to modify.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/vpc/v1alpha1.VPCPeerConnection
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a VPCPeerConnection in vpc to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a VPCPeerConnection in vpc to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Link Type
	// +kubebuilder:validation:Optional
	LinkType *string `json:"linkType,omitempty" tf:"link_type,omitempty"`

	// The new name of the VPC peering connection.
	// The name must be 1 to 128 characters in length, and cannot start with http:// or https://.
	// +kubebuilder:validation:Optional
	PeerConnectionAccepterName *string `json:"peerConnectionAccepterName,omitempty" tf:"peer_connection_accepter_name,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// The ID of the new resource group.
	// +kubebuilder:validation:Optional
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`
}

// VPCPeerConnectionAccepterSpec defines the desired state of VPCPeerConnectionAccepter
type VPCPeerConnectionAccepterSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VPCPeerConnectionAccepterParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider VPCPeerConnectionAccepterInitParameters `json:"initProvider,omitempty"`
}

// VPCPeerConnectionAccepterStatus defines the observed state of VPCPeerConnectionAccepter.
type VPCPeerConnectionAccepterStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VPCPeerConnectionAccepterObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// VPCPeerConnectionAccepter is the Schema for the VPCPeerConnectionAccepters API. Provides a Alicloud Vpc Peer Peer Connection Accepter resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type VPCPeerConnectionAccepter struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VPCPeerConnectionAccepterSpec   `json:"spec"`
	Status            VPCPeerConnectionAccepterStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VPCPeerConnectionAccepterList contains a list of VPCPeerConnectionAccepters
type VPCPeerConnectionAccepterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VPCPeerConnectionAccepter `json:"items"`
}

// Repository type metadata.
var (
	VPCPeerConnectionAccepter_Kind             = "VPCPeerConnectionAccepter"
	VPCPeerConnectionAccepter_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VPCPeerConnectionAccepter_Kind}.String()
	VPCPeerConnectionAccepter_KindAPIVersion   = VPCPeerConnectionAccepter_Kind + "." + CRDGroupVersion.String()
	VPCPeerConnectionAccepter_GroupVersionKind = CRDGroupVersion.WithKind(VPCPeerConnectionAccepter_Kind)
)

func init() {
	SchemeBuilder.Register(&VPCPeerConnectionAccepter{}, &VPCPeerConnectionAccepterList{})
}
