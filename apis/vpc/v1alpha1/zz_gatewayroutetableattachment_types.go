// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type GatewayRouteTableAttachmentInitParameters struct {

	// Specifies whether to only precheck this request. Default value: false.
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// The ID of the IPv4 Gateway instance.
	IPv4GatewayID *string `json:"ipv4GatewayId,omitempty" tf:"ipv4_gateway_id,omitempty"`

	// The ID of the Gateway route table to be bound.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/vpc/v1alpha1.Table
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	RouteTableID *string `json:"routeTableId,omitempty" tf:"route_table_id,omitempty"`

	// Reference to a Table in vpc to populate routeTableId.
	// +kubebuilder:validation:Optional
	RouteTableIDRef *v1.Reference `json:"routeTableIdRef,omitempty" tf:"-"`

	// Selector for a Table in vpc to populate routeTableId.
	// +kubebuilder:validation:Optional
	RouteTableIDSelector *v1.Selector `json:"routeTableIdSelector,omitempty" tf:"-"`
}

type GatewayRouteTableAttachmentObservation struct {

	// The creation time of the resource.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// Specifies whether to only precheck this request. Default value: false.
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// The ID of the resource supplied above.The value is formulated as <route_table_id>:<ipv4_gateway_id>.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID of the IPv4 Gateway instance.
	IPv4GatewayID *string `json:"ipv4GatewayId,omitempty" tf:"ipv4_gateway_id,omitempty"`

	// The ID of the Gateway route table to be bound.
	RouteTableID *string `json:"routeTableId,omitempty" tf:"route_table_id,omitempty"`

	// The status of the IPv4 Gateway instance. Value:
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type GatewayRouteTableAttachmentParameters struct {

	// Specifies whether to only precheck this request. Default value: false.
	// +kubebuilder:validation:Optional
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// The ID of the IPv4 Gateway instance.
	// +kubebuilder:validation:Optional
	IPv4GatewayID *string `json:"ipv4GatewayId,omitempty" tf:"ipv4_gateway_id,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// The ID of the Gateway route table to be bound.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/vpc/v1alpha1.Table
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	RouteTableID *string `json:"routeTableId,omitempty" tf:"route_table_id,omitempty"`

	// Reference to a Table in vpc to populate routeTableId.
	// +kubebuilder:validation:Optional
	RouteTableIDRef *v1.Reference `json:"routeTableIdRef,omitempty" tf:"-"`

	// Selector for a Table in vpc to populate routeTableId.
	// +kubebuilder:validation:Optional
	RouteTableIDSelector *v1.Selector `json:"routeTableIdSelector,omitempty" tf:"-"`
}

// GatewayRouteTableAttachmentSpec defines the desired state of GatewayRouteTableAttachment
type GatewayRouteTableAttachmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     GatewayRouteTableAttachmentParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider GatewayRouteTableAttachmentInitParameters `json:"initProvider,omitempty"`
}

// GatewayRouteTableAttachmentStatus defines the observed state of GatewayRouteTableAttachment.
type GatewayRouteTableAttachmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        GatewayRouteTableAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// GatewayRouteTableAttachment is the Schema for the GatewayRouteTableAttachments API. Provides a Alicloud VPC Gateway Route Table Attachment resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type GatewayRouteTableAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.ipv4GatewayId) || (has(self.initProvider) && has(self.initProvider.ipv4GatewayId))",message="spec.forProvider.ipv4GatewayId is a required parameter"
	Spec   GatewayRouteTableAttachmentSpec   `json:"spec"`
	Status GatewayRouteTableAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GatewayRouteTableAttachmentList contains a list of GatewayRouteTableAttachments
type GatewayRouteTableAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GatewayRouteTableAttachment `json:"items"`
}

// Repository type metadata.
var (
	GatewayRouteTableAttachment_Kind             = "GatewayRouteTableAttachment"
	GatewayRouteTableAttachment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: GatewayRouteTableAttachment_Kind}.String()
	GatewayRouteTableAttachment_KindAPIVersion   = GatewayRouteTableAttachment_Kind + "." + CRDGroupVersion.String()
	GatewayRouteTableAttachment_GroupVersionKind = CRDGroupVersion.WithKind(GatewayRouteTableAttachment_Kind)
)

func init() {
	SchemeBuilder.Register(&GatewayRouteTableAttachment{}, &GatewayRouteTableAttachmentList{})
}
