// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type TableAttachmentInitParameters struct {

	// The ID of the route table to be bound to the switch.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/vpc/v1alpha1.Table
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	RouteTableID *string `json:"routeTableId,omitempty" tf:"route_table_id,omitempty"`

	// Reference to a Table in vpc to populate routeTableId.
	// +kubebuilder:validation:Optional
	RouteTableIDRef *v1.Reference `json:"routeTableIdRef,omitempty" tf:"-"`

	// Selector for a Table in vpc to populate routeTableId.
	// +kubebuilder:validation:Optional
	RouteTableIDSelector *v1.Selector `json:"routeTableIdSelector,omitempty" tf:"-"`

	// The ID of the switch to bind the route table.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/vpc/v1alpha1.Vswitch
	VswitchID *string `json:"vswitchId,omitempty" tf:"vswitch_id,omitempty"`

	// Reference to a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDRef *v1.Reference `json:"vswitchIdRef,omitempty" tf:"-"`

	// Selector for a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDSelector *v1.Selector `json:"vswitchIdSelector,omitempty" tf:"-"`
}

type TableAttachmentObservation struct {

	// The ID of the resource supplied above.The value is formulated as <route_table_id>:<vswitch_id>.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID of the route table to be bound to the switch.
	RouteTableID *string `json:"routeTableId,omitempty" tf:"route_table_id,omitempty"`

	// The status of the resource.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// The ID of the switch to bind the route table.
	VswitchID *string `json:"vswitchId,omitempty" tf:"vswitch_id,omitempty"`
}

type TableAttachmentParameters struct {

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// The ID of the route table to be bound to the switch.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/vpc/v1alpha1.Table
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	RouteTableID *string `json:"routeTableId,omitempty" tf:"route_table_id,omitempty"`

	// Reference to a Table in vpc to populate routeTableId.
	// +kubebuilder:validation:Optional
	RouteTableIDRef *v1.Reference `json:"routeTableIdRef,omitempty" tf:"-"`

	// Selector for a Table in vpc to populate routeTableId.
	// +kubebuilder:validation:Optional
	RouteTableIDSelector *v1.Selector `json:"routeTableIdSelector,omitempty" tf:"-"`

	// The ID of the switch to bind the route table.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/vpc/v1alpha1.Vswitch
	// +kubebuilder:validation:Optional
	VswitchID *string `json:"vswitchId,omitempty" tf:"vswitch_id,omitempty"`

	// Reference to a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDRef *v1.Reference `json:"vswitchIdRef,omitempty" tf:"-"`

	// Selector for a Vswitch in vpc to populate vswitchId.
	// +kubebuilder:validation:Optional
	VswitchIDSelector *v1.Selector `json:"vswitchIdSelector,omitempty" tf:"-"`
}

// TableAttachmentSpec defines the desired state of TableAttachment
type TableAttachmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TableAttachmentParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider TableAttachmentInitParameters `json:"initProvider,omitempty"`
}

// TableAttachmentStatus defines the observed state of TableAttachment.
type TableAttachmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TableAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// TableAttachment is the Schema for the TableAttachments API. Provides a Alicloud VPC Route Table Attachment resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type TableAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              TableAttachmentSpec   `json:"spec"`
	Status            TableAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TableAttachmentList contains a list of TableAttachments
type TableAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TableAttachment `json:"items"`
}

// Repository type metadata.
var (
	TableAttachment_Kind             = "TableAttachment"
	TableAttachment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TableAttachment_Kind}.String()
	TableAttachment_KindAPIVersion   = TableAttachment_Kind + "." + CRDGroupVersion.String()
	TableAttachment_GroupVersionKind = CRDGroupVersion.WithKind(TableAttachment_Kind)
)

func init() {
	SchemeBuilder.Register(&TableAttachment{}, &TableAttachmentList{})
}
