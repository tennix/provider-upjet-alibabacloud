// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type GatewayEndpointRouteTableAttachmentInitParameters struct {

	// The ID of the gateway endpoint instance to which you want to associate the route table.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/vpc/v1alpha1.GatewayEndpoint
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	GatewayEndpointID *string `json:"gatewayEndpointId,omitempty" tf:"gateway_endpoint_id,omitempty"`

	// Reference to a GatewayEndpoint in vpc to populate gatewayEndpointId.
	// +kubebuilder:validation:Optional
	GatewayEndpointIDRef *v1.Reference `json:"gatewayEndpointIdRef,omitempty" tf:"-"`

	// Selector for a GatewayEndpoint in vpc to populate gatewayEndpointId.
	// +kubebuilder:validation:Optional
	GatewayEndpointIDSelector *v1.Selector `json:"gatewayEndpointIdSelector,omitempty" tf:"-"`

	// Routing table ID.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/vpc/v1alpha1.Table
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	RouteTableID *string `json:"routeTableId,omitempty" tf:"route_table_id,omitempty"`

	// Reference to a Table in vpc to populate routeTableId.
	// +kubebuilder:validation:Optional
	RouteTableIDRef *v1.Reference `json:"routeTableIdRef,omitempty" tf:"-"`

	// Selector for a Table in vpc to populate routeTableId.
	// +kubebuilder:validation:Optional
	RouteTableIDSelector *v1.Selector `json:"routeTableIdSelector,omitempty" tf:"-"`
}

type GatewayEndpointRouteTableAttachmentObservation struct {

	// The ID of the gateway endpoint instance to which you want to associate the route table.
	GatewayEndpointID *string `json:"gatewayEndpointId,omitempty" tf:"gateway_endpoint_id,omitempty"`

	// The ID of the resource supplied above.The value is formulated as <gateway_endpoint_id>:<route_table_id>.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Routing table ID.
	RouteTableID *string `json:"routeTableId,omitempty" tf:"route_table_id,omitempty"`

	// Status of the gateway endpoint.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type GatewayEndpointRouteTableAttachmentParameters struct {

	// The ID of the gateway endpoint instance to which you want to associate the route table.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/vpc/v1alpha1.GatewayEndpoint
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	GatewayEndpointID *string `json:"gatewayEndpointId,omitempty" tf:"gateway_endpoint_id,omitempty"`

	// Reference to a GatewayEndpoint in vpc to populate gatewayEndpointId.
	// +kubebuilder:validation:Optional
	GatewayEndpointIDRef *v1.Reference `json:"gatewayEndpointIdRef,omitempty" tf:"-"`

	// Selector for a GatewayEndpoint in vpc to populate gatewayEndpointId.
	// +kubebuilder:validation:Optional
	GatewayEndpointIDSelector *v1.Selector `json:"gatewayEndpointIdSelector,omitempty" tf:"-"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// Routing table ID.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/vpc/v1alpha1.Table
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	RouteTableID *string `json:"routeTableId,omitempty" tf:"route_table_id,omitempty"`

	// Reference to a Table in vpc to populate routeTableId.
	// +kubebuilder:validation:Optional
	RouteTableIDRef *v1.Reference `json:"routeTableIdRef,omitempty" tf:"-"`

	// Selector for a Table in vpc to populate routeTableId.
	// +kubebuilder:validation:Optional
	RouteTableIDSelector *v1.Selector `json:"routeTableIdSelector,omitempty" tf:"-"`
}

// GatewayEndpointRouteTableAttachmentSpec defines the desired state of GatewayEndpointRouteTableAttachment
type GatewayEndpointRouteTableAttachmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     GatewayEndpointRouteTableAttachmentParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider GatewayEndpointRouteTableAttachmentInitParameters `json:"initProvider,omitempty"`
}

// GatewayEndpointRouteTableAttachmentStatus defines the observed state of GatewayEndpointRouteTableAttachment.
type GatewayEndpointRouteTableAttachmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        GatewayEndpointRouteTableAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// GatewayEndpointRouteTableAttachment is the Schema for the GatewayEndpointRouteTableAttachments API. Provides a Alicloud VPC Gateway Endpoint Route Table Attachment resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type GatewayEndpointRouteTableAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GatewayEndpointRouteTableAttachmentSpec   `json:"spec"`
	Status            GatewayEndpointRouteTableAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GatewayEndpointRouteTableAttachmentList contains a list of GatewayEndpointRouteTableAttachments
type GatewayEndpointRouteTableAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GatewayEndpointRouteTableAttachment `json:"items"`
}

// Repository type metadata.
var (
	GatewayEndpointRouteTableAttachment_Kind             = "GatewayEndpointRouteTableAttachment"
	GatewayEndpointRouteTableAttachment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: GatewayEndpointRouteTableAttachment_Kind}.String()
	GatewayEndpointRouteTableAttachment_KindAPIVersion   = GatewayEndpointRouteTableAttachment_Kind + "." + CRDGroupVersion.String()
	GatewayEndpointRouteTableAttachment_GroupVersionKind = CRDGroupVersion.WithKind(GatewayEndpointRouteTableAttachment_Kind)
)

func init() {
	SchemeBuilder.Register(&GatewayEndpointRouteTableAttachment{}, &GatewayEndpointRouteTableAttachmentList{})
}
