// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type GatewayEndpointInitParameters struct {

	// The description of the VPC gateway endpoint.
	// The length of the description information is between 1 and 255 characters.
	GatewayEndpointDescrption *string `json:"gatewayEndpointDescrption,omitempty" tf:"gateway_endpoint_descrption,omitempty"`

	// The name of the VPC gateway endpoint.
	GatewayEndpointName *string `json:"gatewayEndpointName,omitempty" tf:"gateway_endpoint_name,omitempty"`

	// Access control policies for cloud services. This parameter is required when the cloud service is oss. For details about the syntax and structure of access policies, see syntax and structure of permission Policies.
	PolicyDocument *string `json:"policyDocument,omitempty" tf:"policy_document,omitempty"`

	// The ID of the resource group to which the instance belongs.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The ID list of the route table associated with the VPC gateway endpoint.
	// +listType=set
	RouteTables []*string `json:"routeTables,omitempty" tf:"route_tables,omitempty"`

	// The endpoint service name.
	ServiceName *string `json:"serviceName,omitempty" tf:"service_name,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The ID of the VPC.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/vpc/v1alpha1.VPC
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`
}

type GatewayEndpointObservation struct {

	// The creation time of the VPC gateway endpoint.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// The description of the VPC gateway endpoint.
	// The length of the description information is between 1 and 255 characters.
	GatewayEndpointDescrption *string `json:"gatewayEndpointDescrption,omitempty" tf:"gateway_endpoint_descrption,omitempty"`

	// The name of the VPC gateway endpoint.
	GatewayEndpointName *string `json:"gatewayEndpointName,omitempty" tf:"gateway_endpoint_name,omitempty"`

	// The ID of the resource supplied above.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Access control policies for cloud services. This parameter is required when the cloud service is oss. For details about the syntax and structure of access policies, see syntax and structure of permission Policies.
	PolicyDocument *string `json:"policyDocument,omitempty" tf:"policy_document,omitempty"`

	// The ID of the resource group to which the instance belongs.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The ID list of the route table associated with the VPC gateway endpoint.
	// +listType=set
	RouteTables []*string `json:"routeTables,omitempty" tf:"route_tables,omitempty"`

	// The endpoint service name.
	ServiceName *string `json:"serviceName,omitempty" tf:"service_name,omitempty"`

	// The status of VPC gateway endpoint.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Key-value map of resource tags.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The ID of the VPC.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

type GatewayEndpointParameters struct {

	// The description of the VPC gateway endpoint.
	// The length of the description information is between 1 and 255 characters.
	// +kubebuilder:validation:Optional
	GatewayEndpointDescrption *string `json:"gatewayEndpointDescrption,omitempty" tf:"gateway_endpoint_descrption,omitempty"`

	// The name of the VPC gateway endpoint.
	// +kubebuilder:validation:Optional
	GatewayEndpointName *string `json:"gatewayEndpointName,omitempty" tf:"gateway_endpoint_name,omitempty"`

	// Access control policies for cloud services. This parameter is required when the cloud service is oss. For details about the syntax and structure of access policies, see syntax and structure of permission Policies.
	// +kubebuilder:validation:Optional
	PolicyDocument *string `json:"policyDocument,omitempty" tf:"policy_document,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// The ID of the resource group to which the instance belongs.
	// +kubebuilder:validation:Optional
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The ID list of the route table associated with the VPC gateway endpoint.
	// +kubebuilder:validation:Optional
	// +listType=set
	RouteTables []*string `json:"routeTables,omitempty" tf:"route_tables,omitempty"`

	// The endpoint service name.
	// +kubebuilder:validation:Optional
	ServiceName *string `json:"serviceName,omitempty" tf:"service_name,omitempty"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The ID of the VPC.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/vpc/v1alpha1.VPC
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`
}

// GatewayEndpointSpec defines the desired state of GatewayEndpoint
type GatewayEndpointSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     GatewayEndpointParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider GatewayEndpointInitParameters `json:"initProvider,omitempty"`
}

// GatewayEndpointStatus defines the observed state of GatewayEndpoint.
type GatewayEndpointStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        GatewayEndpointObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// GatewayEndpoint is the Schema for the GatewayEndpoints API. Provides a Alicloud VPC Gateway Endpoint resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type GatewayEndpoint struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.serviceName) || (has(self.initProvider) && has(self.initProvider.serviceName))",message="spec.forProvider.serviceName is a required parameter"
	Spec   GatewayEndpointSpec   `json:"spec"`
	Status GatewayEndpointStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GatewayEndpointList contains a list of GatewayEndpoints
type GatewayEndpointList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GatewayEndpoint `json:"items"`
}

// Repository type metadata.
var (
	GatewayEndpoint_Kind             = "GatewayEndpoint"
	GatewayEndpoint_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: GatewayEndpoint_Kind}.String()
	GatewayEndpoint_KindAPIVersion   = GatewayEndpoint_Kind + "." + CRDGroupVersion.String()
	GatewayEndpoint_GroupVersionKind = CRDGroupVersion.WithKind(GatewayEndpoint_Kind)
)

func init() {
	SchemeBuilder.Register(&GatewayEndpoint{}, &GatewayEndpointList{})
}
