// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type EntryInitParameters struct {

	// The description of the Route Entry. The description must be 1 to 256 characters in length, and cannot start with http:// or https://.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The destination CIDR block of the custom route entry.
	DestinationCidrblock *string `json:"destinationCidrblock,omitempty" tf:"destination_cidrblock,omitempty"`

	// The ID of Next Hop.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/ecs/v1alpha1.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	NexthopID *string `json:"nexthopId,omitempty" tf:"nexthop_id,omitempty"`

	// Reference to a Instance in ecs to populate nexthopId.
	// +kubebuilder:validation:Optional
	NexthopIDRef *v1.Reference `json:"nexthopIdRef,omitempty" tf:"-"`

	// Selector for a Instance in ecs to populate nexthopId.
	// +kubebuilder:validation:Optional
	NexthopIDSelector *v1.Selector `json:"nexthopIdSelector,omitempty" tf:"-"`

	// The type of Next Hop. Valid values:
	NexthopType *string `json:"nexthopType,omitempty" tf:"nexthop_type,omitempty"`

	// The ID of the Route Table.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/vpc/v1alpha1.VPC
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("route_table_id",true)
	RouteTableID *string `json:"routeTableId,omitempty" tf:"route_table_id,omitempty"`

	// Reference to a VPC in vpc to populate routeTableId.
	// +kubebuilder:validation:Optional
	RouteTableIDRef *v1.Reference `json:"routeTableIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate routeTableId.
	// +kubebuilder:validation:Optional
	RouteTableIDSelector *v1.Selector `json:"routeTableIdSelector,omitempty" tf:"-"`
}

type EntryObservation struct {

	// The description of the Route Entry. The description must be 1 to 256 characters in length, and cannot start with http:// or https://.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The destination CIDR block of the custom route entry.
	DestinationCidrblock *string `json:"destinationCidrblock,omitempty" tf:"destination_cidrblock,omitempty"`

	// It formats as <route_table_id>:<router_id>:<destination_cidrblock>:<nexthop_type>:<nexthop_id>.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID of Next Hop.
	NexthopID *string `json:"nexthopId,omitempty" tf:"nexthop_id,omitempty"`

	// The type of Next Hop. Valid values:
	NexthopType *string `json:"nexthopType,omitempty" tf:"nexthop_type,omitempty"`

	// The ID of the Route Table.
	RouteTableID *string `json:"routeTableId,omitempty" tf:"route_table_id,omitempty"`

	// (Deprecated) This argument has been deprecated. Please use other arguments to launch a custom route entry.
	RouterID *string `json:"routerId,omitempty" tf:"router_id,omitempty"`
}

type EntryParameters struct {

	// The description of the Route Entry. The description must be 1 to 256 characters in length, and cannot start with http:// or https://.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The destination CIDR block of the custom route entry.
	// +kubebuilder:validation:Optional
	DestinationCidrblock *string `json:"destinationCidrblock,omitempty" tf:"destination_cidrblock,omitempty"`

	// The ID of Next Hop.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/ecs/v1alpha1.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	NexthopID *string `json:"nexthopId,omitempty" tf:"nexthop_id,omitempty"`

	// Reference to a Instance in ecs to populate nexthopId.
	// +kubebuilder:validation:Optional
	NexthopIDRef *v1.Reference `json:"nexthopIdRef,omitempty" tf:"-"`

	// Selector for a Instance in ecs to populate nexthopId.
	// +kubebuilder:validation:Optional
	NexthopIDSelector *v1.Selector `json:"nexthopIdSelector,omitempty" tf:"-"`

	// The type of Next Hop. Valid values:
	// +kubebuilder:validation:Optional
	NexthopType *string `json:"nexthopType,omitempty" tf:"nexthop_type,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`

	// The ID of the Route Table.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/vpc/v1alpha1.VPC
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("route_table_id",true)
	// +kubebuilder:validation:Optional
	RouteTableID *string `json:"routeTableId,omitempty" tf:"route_table_id,omitempty"`

	// Reference to a VPC in vpc to populate routeTableId.
	// +kubebuilder:validation:Optional
	RouteTableIDRef *v1.Reference `json:"routeTableIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate routeTableId.
	// +kubebuilder:validation:Optional
	RouteTableIDSelector *v1.Selector `json:"routeTableIdSelector,omitempty" tf:"-"`
}

// EntrySpec defines the desired state of Entry
type EntrySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     EntryParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider EntryInitParameters `json:"initProvider,omitempty"`
}

// EntryStatus defines the observed state of Entry.
type EntryStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EntryObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Entry is the Schema for the Entrys API. Provides a Alicloud Route Entry resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type Entry struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              EntrySpec   `json:"spec"`
	Status            EntryStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EntryList contains a list of Entrys
type EntryList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Entry `json:"items"`
}

// Repository type metadata.
var (
	Entry_Kind             = "Entry"
	Entry_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Entry_Kind}.String()
	Entry_KindAPIVersion   = Entry_Kind + "." + CRDGroupVersion.String()
	Entry_GroupVersionKind = CRDGroupVersion.WithKind(Entry_Kind)
)

func init() {
	SchemeBuilder.Register(&Entry{}, &EntryList{})
}
