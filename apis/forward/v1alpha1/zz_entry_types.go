// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type EntryInitParameters struct {

	// The external ip address, the ip must along bandwidth package public ip which alicloud_nat_gateway argument bandwidth_packages.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/eip/v1alpha1.Address
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("ip_address",false)
	ExternalIP *string `json:"externalIp,omitempty" tf:"external_ip,omitempty"`

	// Reference to a Address in eip to populate externalIp.
	// +kubebuilder:validation:Optional
	ExternalIPRef *v1.Reference `json:"externalIpRef,omitempty" tf:"-"`

	// Selector for a Address in eip to populate externalIp.
	// +kubebuilder:validation:Optional
	ExternalIPSelector *v1.Selector `json:"externalIpSelector,omitempty" tf:"-"`

	// The external port, valid value is 1~65535|any.
	ExternalPort *string `json:"externalPort,omitempty" tf:"external_port,omitempty"`

	// The name of forward entry.
	ForwardEntryName *string `json:"forwardEntryName,omitempty" tf:"forward_entry_name,omitempty"`

	// The value can get from alicloud_nat_gateway Attributes "forward_table_ids".
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/nat/v1alpha1.Gateway
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("forward_table_ids",true)
	ForwardTableID *string `json:"forwardTableId,omitempty" tf:"forward_table_id,omitempty"`

	// Reference to a Gateway in nat to populate forwardTableId.
	// +kubebuilder:validation:Optional
	ForwardTableIDRef *v1.Reference `json:"forwardTableIdRef,omitempty" tf:"-"`

	// Selector for a Gateway in nat to populate forwardTableId.
	// +kubebuilder:validation:Optional
	ForwardTableIDSelector *v1.Selector `json:"forwardTableIdSelector,omitempty" tf:"-"`

	// The ip protocol, valid value is tcp|udp|any.
	IPProtocol *string `json:"ipProtocol,omitempty" tf:"ip_protocol,omitempty"`

	// The internal ip, must a private ip.
	InternalIP *string `json:"internalIp,omitempty" tf:"internal_ip,omitempty"`

	// The internal port, valid value is 1~65535|any.
	InternalPort *string `json:"internalPort,omitempty" tf:"internal_port,omitempty"`

	// Field name has been deprecated from provider version 1.119.1. New field forward_entry_name instead.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies whether to remove limits on the port range. Default value is false.
	PortBreak *bool `json:"portBreak,omitempty" tf:"port_break,omitempty"`
}

type EntryObservation struct {

	// The external ip address, the ip must along bandwidth package public ip which alicloud_nat_gateway argument bandwidth_packages.
	ExternalIP *string `json:"externalIp,omitempty" tf:"external_ip,omitempty"`

	// The external port, valid value is 1~65535|any.
	ExternalPort *string `json:"externalPort,omitempty" tf:"external_port,omitempty"`

	// The id of the forward entry on the server.
	ForwardEntryID *string `json:"forwardEntryId,omitempty" tf:"forward_entry_id,omitempty"`

	// The name of forward entry.
	ForwardEntryName *string `json:"forwardEntryName,omitempty" tf:"forward_entry_name,omitempty"`

	// The value can get from alicloud_nat_gateway Attributes "forward_table_ids".
	ForwardTableID *string `json:"forwardTableId,omitempty" tf:"forward_table_id,omitempty"`

	// The ID of the forward entry. The value formats as <forward_table_id>:<forward_entry_id>
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ip protocol, valid value is tcp|udp|any.
	IPProtocol *string `json:"ipProtocol,omitempty" tf:"ip_protocol,omitempty"`

	// The internal ip, must a private ip.
	InternalIP *string `json:"internalIp,omitempty" tf:"internal_ip,omitempty"`

	// The internal port, valid value is 1~65535|any.
	InternalPort *string `json:"internalPort,omitempty" tf:"internal_port,omitempty"`

	// Field name has been deprecated from provider version 1.119.1. New field forward_entry_name instead.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies whether to remove limits on the port range. Default value is false.
	PortBreak *bool `json:"portBreak,omitempty" tf:"port_break,omitempty"`

	// (Available since 1.119.1+) The status of forward entry.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type EntryParameters struct {

	// The external ip address, the ip must along bandwidth package public ip which alicloud_nat_gateway argument bandwidth_packages.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/eip/v1alpha1.Address
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("ip_address",false)
	// +kubebuilder:validation:Optional
	ExternalIP *string `json:"externalIp,omitempty" tf:"external_ip,omitempty"`

	// Reference to a Address in eip to populate externalIp.
	// +kubebuilder:validation:Optional
	ExternalIPRef *v1.Reference `json:"externalIpRef,omitempty" tf:"-"`

	// Selector for a Address in eip to populate externalIp.
	// +kubebuilder:validation:Optional
	ExternalIPSelector *v1.Selector `json:"externalIpSelector,omitempty" tf:"-"`

	// The external port, valid value is 1~65535|any.
	// +kubebuilder:validation:Optional
	ExternalPort *string `json:"externalPort,omitempty" tf:"external_port,omitempty"`

	// The name of forward entry.
	// +kubebuilder:validation:Optional
	ForwardEntryName *string `json:"forwardEntryName,omitempty" tf:"forward_entry_name,omitempty"`

	// The value can get from alicloud_nat_gateway Attributes "forward_table_ids".
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-upjet-alibabacloud/apis/nat/v1alpha1.Gateway
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("forward_table_ids",true)
	// +kubebuilder:validation:Optional
	ForwardTableID *string `json:"forwardTableId,omitempty" tf:"forward_table_id,omitempty"`

	// Reference to a Gateway in nat to populate forwardTableId.
	// +kubebuilder:validation:Optional
	ForwardTableIDRef *v1.Reference `json:"forwardTableIdRef,omitempty" tf:"-"`

	// Selector for a Gateway in nat to populate forwardTableId.
	// +kubebuilder:validation:Optional
	ForwardTableIDSelector *v1.Selector `json:"forwardTableIdSelector,omitempty" tf:"-"`

	// The ip protocol, valid value is tcp|udp|any.
	// +kubebuilder:validation:Optional
	IPProtocol *string `json:"ipProtocol,omitempty" tf:"ip_protocol,omitempty"`

	// The internal ip, must a private ip.
	// +kubebuilder:validation:Optional
	InternalIP *string `json:"internalIp,omitempty" tf:"internal_ip,omitempty"`

	// The internal port, valid value is 1~65535|any.
	// +kubebuilder:validation:Optional
	InternalPort *string `json:"internalPort,omitempty" tf:"internal_port,omitempty"`

	// Field name has been deprecated from provider version 1.119.1. New field forward_entry_name instead.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies whether to remove limits on the port range. Default value is false.
	// +kubebuilder:validation:Optional
	PortBreak *bool `json:"portBreak,omitempty" tf:"port_break,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"-"`
}

// EntrySpec defines the desired state of Entry
type EntrySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     EntryParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider EntryInitParameters `json:"initProvider,omitempty"`
}

// EntryStatus defines the observed state of Entry.
type EntryStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EntryObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Entry is the Schema for the Entrys API. Provides a Alicloud forward resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type Entry struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.externalPort) || (has(self.initProvider) && has(self.initProvider.externalPort))",message="spec.forProvider.externalPort is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.internalIp) || (has(self.initProvider) && has(self.initProvider.internalIp))",message="spec.forProvider.internalIp is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.internalPort) || (has(self.initProvider) && has(self.initProvider.internalPort))",message="spec.forProvider.internalPort is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.ipProtocol) || (has(self.initProvider) && has(self.initProvider.ipProtocol))",message="spec.forProvider.ipProtocol is a required parameter"
	Spec   EntrySpec   `json:"spec"`
	Status EntryStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EntryList contains a list of Entrys
type EntryList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Entry `json:"items"`
}

// Repository type metadata.
var (
	Entry_Kind             = "Entry"
	Entry_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Entry_Kind}.String()
	Entry_KindAPIVersion   = Entry_Kind + "." + CRDGroupVersion.String()
	Entry_GroupVersionKind = CRDGroupVersion.WithKind(Entry_Kind)
)

func init() {
	SchemeBuilder.Register(&Entry{}, &EntryList{})
}
