---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  name: servergroups.alb.alibabacloud.crossplane.io
spec:
  group: alb.alibabacloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - alibabacloud
    kind: ServerGroup
    listKind: ServerGroupList
    plural: servergroups
    singular: servergroup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServerGroup is the Schema for the ServerGroups API. Provides
          a Alicloud Application Load Balancer (ALB) Server Group resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ServerGroupSpec defines the desired state of ServerGroup
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  connectionDrainConfig:
                    description: Elegant interrupt configuration. See connection_drain_config
                      below.
                    items:
                      properties:
                        connectionDrainEnabled:
                          description: 'Specifies whether to enable connection draining.
                            Valid values:'
                          type: boolean
                        connectionDrainTimeout:
                          description: The timeout period of connection draining.
                          type: number
                      type: object
                    type: array
                  crossZoneEnabled:
                    description: 'Indicates whether cross-zone load balancing is enabled
                      for the server group. Valid values:'
                    type: boolean
                  dryRun:
                    description: |-
                      Whether to PreCheck only this request. Value:
                      true: Send a check request,
                      false (default): Send a normal request.
                    type: boolean
                  healthCheckConfig:
                    description: The configuration of health checks See health_check_config
                      below.
                    items:
                      properties:
                        healthCheckCodes:
                          description: The status code for a successful health check
                          items:
                            type: string
                          type: array
                        healthCheckConnectPort:
                          description: The backend port that is used for health checks.
                          type: number
                        healthCheckEnabled:
                          description: 'Specifies whether to enable the health check
                            feature. Valid values:'
                          type: boolean
                        healthCheckHost:
                          description: The domain name that is used for health checks.
                          type: string
                        healthCheckHttpVersion:
                          description: 'The HTTP version that is used for health checks.
                            Valid values:'
                          type: string
                        healthCheckInterval:
                          description: 'The interval at which health checks are performed.
                            Unit: seconds.'
                          type: number
                        healthCheckMethod:
                          description: 'The HTTP method that is used for health checks.
                            Valid values:'
                          type: string
                        healthCheckPath:
                          description: The URL that is used for health checks.
                          type: string
                        healthCheckProtocol:
                          description: 'The protocol that is used for health checks.
                            Valid values:'
                          type: string
                        healthCheckTimeout:
                          description: 'The timeout period of a health check response.
                            If a backend ECS instance does not respond within the
                            specified timeout period, the ECS instance fails the health
                            check. Unit: seconds.'
                          type: number
                        healthyThreshold:
                          description: The number of times that an unhealthy backend
                            server must consecutively pass health checks before it
                            is declared healthy. In this case, the health check status
                            of the backend server changes from fail to success.
                          type: number
                        unhealthyThreshold:
                          description: The number of times that a healthy backend
                            server must consecutively fail health checks before it
                            is declared unhealthy. In this case, the health check
                            status of the backend server changes from success to fail.
                          type: number
                      type: object
                    type: array
                  healthCheckTemplateId:
                    description: The ID of the resource group to which you want to
                      transfer the cloud resource.
                    type: string
                  ipv6Enabled:
                    description: Enable Ipv6
                    type: boolean
                  protocol:
                    description: 'The backend protocol. Valid values:'
                    type: string
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  resourceGroupId:
                    description: Elegant interrupt configuration.
                    type: string
                  scheduler:
                    description: 'The scheduling algorithm. Valid values:'
                    type: string
                  serverGroupName:
                    description: The name of the server group. The name must be 2
                      to 128 characters in length, and can contain letters, digits,
                      periods (.), underscores (_), and hyphens (-). The name must
                      start with a letter.
                    type: string
                  serverGroupType:
                    description: 'The type of server group. Valid values:'
                    type: string
                  servers:
                    description: List of servers. See servers below.
                    items:
                      properties:
                        description:
                          description: The description of the backend server. The
                            description must be 2 to 256 characters in length, and
                            cannot start with http:// or https://.
                          type: string
                        port:
                          description: 'The port that is used by the backend server.
                            Valid values: 1 to 65535. You can specify at most 200
                            servers in each call.'
                          type: number
                        remoteIpEnabled:
                          description: 'Specifies whether to enable the remote IP
                            feature. You can specify at most 200 servers in each call.
                            Default values:'
                          type: boolean
                        serverId:
                          description: The ID of the backend server. You can specify
                            at most 200 servers in each call.
                          type: string
                        serverIdRef:
                          description: Reference to a Instance in ecs to populate
                            serverId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        serverIdSelector:
                          description: Selector for a Instance in ecs to populate
                            serverId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        serverIp:
                          description: The IP address of the backend server. You can
                            specify at most 200 servers in each call.
                          type: string
                        serverIpRef:
                          description: Reference to a Instance in ecs to populate
                            serverIp.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        serverIpSelector:
                          description: Selector for a Instance in ecs to populate
                            serverIp.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        serverType:
                          description: 'The type of the backend server. You can specify
                            at most 200 servers in each call. Default values:'
                          type: string
                        weight:
                          description: 'The weight of the backend server. Valid values:
                            0 to 100. Default value: 0. If the value is set to 0,
                            no requests are forwarded to the server. You can specify
                            at most 200 servers in each call.'
                          type: number
                      type: object
                    type: array
                  serviceName:
                    description: Only applicable to the ALB Ingress scenario, indicating
                      the K8s Service name corresponding to the server group.
                    type: string
                  slowStartConfig:
                    description: Slow start configuration. See slow_start_config below.
                    items:
                      properties:
                        slowStartDuration:
                          description: The duration of a slow start.
                          type: number
                        slowStartEnabled:
                          description: 'Indicates whether slow starts are enabled.
                            Valid values:'
                          type: boolean
                      type: object
                    type: array
                  stickySessionConfig:
                    description: The configuration of health checks See sticky_session_config
                      below.
                    items:
                      properties:
                        cookie:
                          description: The cookie to be configured on the server.
                          type: string
                        cookieTimeout:
                          description: 'The maximum amount of time to wait before
                            the session cookie expires. Unit: seconds.'
                          type: number
                        stickySessionEnabled:
                          description: 'Specifies whether to enable session persistence.
                            Valid values:'
                          type: boolean
                        stickySessionType:
                          description: 'The method that is used to handle a cookie.
                            Valid values:'
                          type: string
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  uchConfig:
                    description: Url consistency hash parameter configuration See
                      uch_config below.
                    items:
                      properties:
                        type:
                          description: The parameter type. Only QueryString can be
                            filled.
                          type: string
                        value:
                          description: Consistency hash parameter value
                          type: string
                      type: object
                    type: array
                  upstreamKeepaliveEnabled:
                    description: Specifies whether to enable persistent TCP connections.
                    type: boolean
                  vpcId:
                    description: The ID of the virtual private cloud (VPC). You can
                      add only servers that are deployed in the specified VPC to the
                      server group.
                    type: string
                  vpcIdRef:
                    description: Reference to a VPC in vpc to populate vpcId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  vpcIdSelector:
                    description: Selector for a VPC in vpc to populate vpcId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  connectionDrainConfig:
                    description: Elegant interrupt configuration. See connection_drain_config
                      below.
                    items:
                      properties:
                        connectionDrainEnabled:
                          description: 'Specifies whether to enable connection draining.
                            Valid values:'
                          type: boolean
                        connectionDrainTimeout:
                          description: The timeout period of connection draining.
                          type: number
                      type: object
                    type: array
                  crossZoneEnabled:
                    description: 'Indicates whether cross-zone load balancing is enabled
                      for the server group. Valid values:'
                    type: boolean
                  dryRun:
                    description: |-
                      Whether to PreCheck only this request. Value:
                      true: Send a check request,
                      false (default): Send a normal request.
                    type: boolean
                  healthCheckConfig:
                    description: The configuration of health checks See health_check_config
                      below.
                    items:
                      properties:
                        healthCheckCodes:
                          description: The status code for a successful health check
                          items:
                            type: string
                          type: array
                        healthCheckConnectPort:
                          description: The backend port that is used for health checks.
                          type: number
                        healthCheckEnabled:
                          description: 'Specifies whether to enable the health check
                            feature. Valid values:'
                          type: boolean
                        healthCheckHost:
                          description: The domain name that is used for health checks.
                          type: string
                        healthCheckHttpVersion:
                          description: 'The HTTP version that is used for health checks.
                            Valid values:'
                          type: string
                        healthCheckInterval:
                          description: 'The interval at which health checks are performed.
                            Unit: seconds.'
                          type: number
                        healthCheckMethod:
                          description: 'The HTTP method that is used for health checks.
                            Valid values:'
                          type: string
                        healthCheckPath:
                          description: The URL that is used for health checks.
                          type: string
                        healthCheckProtocol:
                          description: 'The protocol that is used for health checks.
                            Valid values:'
                          type: string
                        healthCheckTimeout:
                          description: 'The timeout period of a health check response.
                            If a backend ECS instance does not respond within the
                            specified timeout period, the ECS instance fails the health
                            check. Unit: seconds.'
                          type: number
                        healthyThreshold:
                          description: The number of times that an unhealthy backend
                            server must consecutively pass health checks before it
                            is declared healthy. In this case, the health check status
                            of the backend server changes from fail to success.
                          type: number
                        unhealthyThreshold:
                          description: The number of times that a healthy backend
                            server must consecutively fail health checks before it
                            is declared unhealthy. In this case, the health check
                            status of the backend server changes from success to fail.
                          type: number
                      type: object
                    type: array
                  healthCheckTemplateId:
                    description: The ID of the resource group to which you want to
                      transfer the cloud resource.
                    type: string
                  ipv6Enabled:
                    description: Enable Ipv6
                    type: boolean
                  protocol:
                    description: 'The backend protocol. Valid values:'
                    type: string
                  resourceGroupId:
                    description: Elegant interrupt configuration.
                    type: string
                  scheduler:
                    description: 'The scheduling algorithm. Valid values:'
                    type: string
                  serverGroupName:
                    description: The name of the server group. The name must be 2
                      to 128 characters in length, and can contain letters, digits,
                      periods (.), underscores (_), and hyphens (-). The name must
                      start with a letter.
                    type: string
                  serverGroupType:
                    description: 'The type of server group. Valid values:'
                    type: string
                  servers:
                    description: List of servers. See servers below.
                    items:
                      properties:
                        description:
                          description: The description of the backend server. The
                            description must be 2 to 256 characters in length, and
                            cannot start with http:// or https://.
                          type: string
                        port:
                          description: 'The port that is used by the backend server.
                            Valid values: 1 to 65535. You can specify at most 200
                            servers in each call.'
                          type: number
                        remoteIpEnabled:
                          description: 'Specifies whether to enable the remote IP
                            feature. You can specify at most 200 servers in each call.
                            Default values:'
                          type: boolean
                        serverId:
                          description: The ID of the backend server. You can specify
                            at most 200 servers in each call.
                          type: string
                        serverIdRef:
                          description: Reference to a Instance in ecs to populate
                            serverId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        serverIdSelector:
                          description: Selector for a Instance in ecs to populate
                            serverId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        serverIp:
                          description: The IP address of the backend server. You can
                            specify at most 200 servers in each call.
                          type: string
                        serverIpRef:
                          description: Reference to a Instance in ecs to populate
                            serverIp.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        serverIpSelector:
                          description: Selector for a Instance in ecs to populate
                            serverIp.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        serverType:
                          description: 'The type of the backend server. You can specify
                            at most 200 servers in each call. Default values:'
                          type: string
                        weight:
                          description: 'The weight of the backend server. Valid values:
                            0 to 100. Default value: 0. If the value is set to 0,
                            no requests are forwarded to the server. You can specify
                            at most 200 servers in each call.'
                          type: number
                      type: object
                    type: array
                  serviceName:
                    description: Only applicable to the ALB Ingress scenario, indicating
                      the K8s Service name corresponding to the server group.
                    type: string
                  slowStartConfig:
                    description: Slow start configuration. See slow_start_config below.
                    items:
                      properties:
                        slowStartDuration:
                          description: The duration of a slow start.
                          type: number
                        slowStartEnabled:
                          description: 'Indicates whether slow starts are enabled.
                            Valid values:'
                          type: boolean
                      type: object
                    type: array
                  stickySessionConfig:
                    description: The configuration of health checks See sticky_session_config
                      below.
                    items:
                      properties:
                        cookie:
                          description: The cookie to be configured on the server.
                          type: string
                        cookieTimeout:
                          description: 'The maximum amount of time to wait before
                            the session cookie expires. Unit: seconds.'
                          type: number
                        stickySessionEnabled:
                          description: 'Specifies whether to enable session persistence.
                            Valid values:'
                          type: boolean
                        stickySessionType:
                          description: 'The method that is used to handle a cookie.
                            Valid values:'
                          type: string
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  uchConfig:
                    description: Url consistency hash parameter configuration See
                      uch_config below.
                    items:
                      properties:
                        type:
                          description: The parameter type. Only QueryString can be
                            filled.
                          type: string
                        value:
                          description: Consistency hash parameter value
                          type: string
                      type: object
                    type: array
                  upstreamKeepaliveEnabled:
                    description: Specifies whether to enable persistent TCP connections.
                    type: boolean
                  vpcId:
                    description: The ID of the virtual private cloud (VPC). You can
                      add only servers that are deployed in the specified VPC to the
                      server group.
                    type: string
                  vpcIdRef:
                    description: Reference to a VPC in vpc to populate vpcId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  vpcIdSelector:
                    description: Selector for a VPC in vpc to populate vpcId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.healthCheckConfig is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.healthCheckConfig)
                || (has(self.initProvider) && has(self.initProvider.healthCheckConfig))'
            - message: spec.forProvider.serverGroupName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.serverGroupName)
                || (has(self.initProvider) && has(self.initProvider.serverGroupName))'
          status:
            description: ServerGroupStatus defines the observed state of ServerGroup.
            properties:
              atProvider:
                properties:
                  connectionDrainConfig:
                    description: Elegant interrupt configuration. See connection_drain_config
                      below.
                    items:
                      properties:
                        connectionDrainEnabled:
                          description: 'Specifies whether to enable connection draining.
                            Valid values:'
                          type: boolean
                        connectionDrainTimeout:
                          description: The timeout period of connection draining.
                          type: number
                      type: object
                    type: array
                  createTime:
                    description: The creation time of the resource
                    type: string
                  crossZoneEnabled:
                    description: 'Indicates whether cross-zone load balancing is enabled
                      for the server group. Valid values:'
                    type: boolean
                  dryRun:
                    description: |-
                      Whether to PreCheck only this request. Value:
                      true: Send a check request,
                      false (default): Send a normal request.
                    type: boolean
                  healthCheckConfig:
                    description: The configuration of health checks See health_check_config
                      below.
                    items:
                      properties:
                        healthCheckCodes:
                          description: The status code for a successful health check
                          items:
                            type: string
                          type: array
                        healthCheckConnectPort:
                          description: The backend port that is used for health checks.
                          type: number
                        healthCheckEnabled:
                          description: 'Specifies whether to enable the health check
                            feature. Valid values:'
                          type: boolean
                        healthCheckHost:
                          description: The domain name that is used for health checks.
                          type: string
                        healthCheckHttpVersion:
                          description: 'The HTTP version that is used for health checks.
                            Valid values:'
                          type: string
                        healthCheckInterval:
                          description: 'The interval at which health checks are performed.
                            Unit: seconds.'
                          type: number
                        healthCheckMethod:
                          description: 'The HTTP method that is used for health checks.
                            Valid values:'
                          type: string
                        healthCheckPath:
                          description: The URL that is used for health checks.
                          type: string
                        healthCheckProtocol:
                          description: 'The protocol that is used for health checks.
                            Valid values:'
                          type: string
                        healthCheckTimeout:
                          description: 'The timeout period of a health check response.
                            If a backend ECS instance does not respond within the
                            specified timeout period, the ECS instance fails the health
                            check. Unit: seconds.'
                          type: number
                        healthyThreshold:
                          description: The number of times that an unhealthy backend
                            server must consecutively pass health checks before it
                            is declared healthy. In this case, the health check status
                            of the backend server changes from fail to success.
                          type: number
                        unhealthyThreshold:
                          description: The number of times that a healthy backend
                            server must consecutively fail health checks before it
                            is declared unhealthy. In this case, the health check
                            status of the backend server changes from success to fail.
                          type: number
                      type: object
                    type: array
                  healthCheckTemplateId:
                    description: The ID of the resource group to which you want to
                      transfer the cloud resource.
                    type: string
                  id:
                    description: The ID of the resource supplied above.
                    type: string
                  ipv6Enabled:
                    description: Enable Ipv6
                    type: boolean
                  protocol:
                    description: 'The backend protocol. Valid values:'
                    type: string
                  resourceGroupId:
                    description: Elegant interrupt configuration.
                    type: string
                  scheduler:
                    description: 'The scheduling algorithm. Valid values:'
                    type: string
                  serverGroupName:
                    description: The name of the server group. The name must be 2
                      to 128 characters in length, and can contain letters, digits,
                      periods (.), underscores (_), and hyphens (-). The name must
                      start with a letter.
                    type: string
                  serverGroupType:
                    description: 'The type of server group. Valid values:'
                    type: string
                  servers:
                    description: List of servers. See servers below.
                    items:
                      properties:
                        description:
                          description: The description of the backend server. The
                            description must be 2 to 256 characters in length, and
                            cannot start with http:// or https://.
                          type: string
                        port:
                          description: 'The port that is used by the backend server.
                            Valid values: 1 to 65535. You can specify at most 200
                            servers in each call.'
                          type: number
                        remoteIpEnabled:
                          description: 'Specifies whether to enable the remote IP
                            feature. You can specify at most 200 servers in each call.
                            Default values:'
                          type: boolean
                        serverGroupId:
                          description: The ID of the server group.
                          type: string
                        serverId:
                          description: The ID of the backend server. You can specify
                            at most 200 servers in each call.
                          type: string
                        serverIp:
                          description: The IP address of the backend server. You can
                            specify at most 200 servers in each call.
                          type: string
                        serverType:
                          description: 'The type of the backend server. You can specify
                            at most 200 servers in each call. Default values:'
                          type: string
                        status:
                          description: 'The addition status of the backend server.
                            Value:'
                          type: string
                        weight:
                          description: 'The weight of the backend server. Valid values:
                            0 to 100. Default value: 0. If the value is set to 0,
                            no requests are forwarded to the server. You can specify
                            at most 200 servers in each call.'
                          type: number
                      type: object
                    type: array
                  serviceName:
                    description: Only applicable to the ALB Ingress scenario, indicating
                      the K8s Service name corresponding to the server group.
                    type: string
                  slowStartConfig:
                    description: Slow start configuration. See slow_start_config below.
                    items:
                      properties:
                        slowStartDuration:
                          description: The duration of a slow start.
                          type: number
                        slowStartEnabled:
                          description: 'Indicates whether slow starts are enabled.
                            Valid values:'
                          type: boolean
                      type: object
                    type: array
                  status:
                    description: 'The addition status of the backend server. Value:'
                    type: string
                  stickySessionConfig:
                    description: The configuration of health checks See sticky_session_config
                      below.
                    items:
                      properties:
                        cookie:
                          description: The cookie to be configured on the server.
                          type: string
                        cookieTimeout:
                          description: 'The maximum amount of time to wait before
                            the session cookie expires. Unit: seconds.'
                          type: number
                        stickySessionEnabled:
                          description: 'Specifies whether to enable session persistence.
                            Valid values:'
                          type: boolean
                        stickySessionType:
                          description: 'The method that is used to handle a cookie.
                            Valid values:'
                          type: string
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  uchConfig:
                    description: Url consistency hash parameter configuration See
                      uch_config below.
                    items:
                      properties:
                        type:
                          description: The parameter type. Only QueryString can be
                            filled.
                          type: string
                        value:
                          description: Consistency hash parameter value
                          type: string
                      type: object
                    type: array
                  upstreamKeepaliveEnabled:
                    description: Specifies whether to enable persistent TCP connections.
                    type: boolean
                  vpcId:
                    description: The ID of the virtual private cloud (VPC). You can
                      add only servers that are deployed in the specified VPC to the
                      server group.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
